{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"InformationView\",\n  props: {\n    msg: String\n  },\n  data() {\n    return {\n      saved: {\n        cards: [],\n        notebook: [],\n        images: []\n      }\n    };\n  },\n  beforeMount() {\n    if (localStorage.getItem('savedData')) {\n      this.saved = JSON.parse(localStorage.getItem('savedData'));\n    }\n  },\n  mounted() {\n    console.log(this.$refs.images);\n    this.$refs.images.forEach(i => {\n      console.log(i, i.naturalWidth, i.naturalHeight);\n      if (i.naturalWidth > i.naturalHeight) {\n        console.log(i);\n        i.classList.add('landscape');\n      }\n    });\n  },\n  computed: {\n    notebook() {\n      console.log(this.$store.getters.notebook);\n      return this.$store.getters.notebook.filter(n => n.Day == this.msg);\n    },\n    cards() {\n      console.log(this.$store.getters.cards);\n      return this.$store.getters.cards.filter(d => d.map == this.msg);\n    },\n    images() {\n      console.log(this.$store.getters.images);\n      return this.$store.getters.images.filter(d => d.day == this.msg);\n    }\n  },\n  methods: {\n    getRatio(index) {\n      console.log(this.$refs, index);\n    },\n    saveCard(card) {\n      if (localStorage.getItem('savedData')) {\n        this.saved = JSON.parse(localStorage.getItem('savedData'));\n      }\n      if (this.saved.cards.includes(card._id)) {\n        console.log(this.saved.cards.indexOf(card._id));\n        this.saved.cards.splice(this.saved.cards.indexOf(card._id), 1);\n      } else {\n        this.saved.cards.push(card._id);\n      }\n      localStorage.setItem('savedData', JSON.stringify(this.saved));\n    },\n    getDay(id) {\n      this.selectedDay = id;\n    },\n    goToCard(d) {\n      this.$router.push({\n        path: '/card/' + d._id\n      });\n    },\n    goToImage(d) {\n      this.$router.push({\n        path: '/image/' + d._id\n      });\n    },\n    onClickButton() {\n      this.$emit('goInfo', '1');\n      this.$router.push({\n        path: '/day'\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";AAyDA;EACAA;EACAC;IACAC;EACA;EACAC;IACA;MACAC;QACAC;QACAC;QACAC;MACA;IACA;EACA;EACAC;IACA;MACA;IACA;EACA;EACAC;IACAC;IACA;MACAA;MACA;QACAA;QACAC;MACA;IACA;EACA;EACAC;IACAN;MACAI;MACA;IACA;IACAL;MACAK;MACA;IACA;IACAH;MACAG;MACA;IACA;EACA;EACAG;IACAC;MACAJ;IACA;IAEAK;MACA;QACA;MACA;MACA;QACAL;QACA;MACA;QACA;MACA;MACAM;IACA;IACAC;MACA;IACA;IAAAC;MACA;QAAAC;MAAA;IACA;IAAAC;MACA;QAAAD;MAAA;IACA;IACAE;MACA;MACA;QAAAF;MAAA;IACA;EACA;AACA","names":["name","props","msg","data","saved","cards","notebook","images","beforeMount","mounted","console","i","computed","methods","getRatio","saveCard","localStorage","getDay","goToCard","path","goToImage","onClickButton"],"sourceRoot":"src/components","sources":["InformationWorld.vue"],"sourcesContent":["<template>\n    <div>\n        <div class=\"flex\">\n            <div class=\"right\">\n                <div class=\"notebook\">   \n                    <p id=\"title\">Methodological reflections </p>  \n                    <div v-for=\"d in notebook\" :key=\"d._id\" class=\"estil\">\n                        <p>{{d.Text}}</p>\n                    </div>\n                </div>\n                <div class=\"figures\">\n                    <div class=\"oval\"></div>\n                    <div class=\"oval\"></div>\n                    <div class=\"oval\"></div>\n                    <div class=\"oval\"></div>\n                    <div class=\"oval\"></div>\n                    <div class=\"oval\"></div>\n                    <div class=\"oval\"></div>\n                    <div class=\"oval\"></div>\n                    <div class=\"oval\"></div>\n                    <div class=\"oval\"></div>\n                    <div class=\"oval\"></div>\n                    <div class=\"oval\"></div>\n                    <div class=\"oval\"></div>\n                    <div class=\"oval\"></div>\n                </div>\n            </div>\n            <div class=\"left\">\n                <div class=\"cards\">\n                    <p>insights on human - nature interactions</p>\n                    <div class=\"card\">\n                        <div v-for=\"d in cards\" :key=\"d._id\" class=\"relative\" @click=\"goToCard(d)\" >\n                            <div class=\"absolute\">\n                                <button v-if=\"hover\">guardar</button>\n                            </div>\n                            <button><img :src=\"'..//..//public/cards/'+d.frontcover\" alt=\"\" @mouseover = \"hover = true\" @mouseeleave = \"hover = fals\"></button>\n                        </div>\n                    </div>\n                    <p >images</p>\n                    <div class=\"card\">\n                        <div v-for=\"(d) in images\"  :key=\"d._id\" class=\"relative\" @click=\"goToImage(d)\" >\n                            <div class=\"absolute\">\n                                <button v-if=\"hover\">guardar</button>\n                            </div>\n                            <button><img :ref=\"'images'\" :src=\"'..//..//public/images/'+d.image\"  alt=\"\" @mouseover = \"hover = true\" @mouseeleave = \"hover = fals\"></button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"arrow\">\n            <a @click=\"onClickButton()\" class=\"button\">torna a l'experi√®ncia</a>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n  name: \"InformationView\",\n  props: {\n    msg: String,\n  },\n  data(){\n    return{\n        saved: {\n            cards:[],\n            notebook: [],\n            images: []\n        }\n    }\n  },\n  beforeMount(){\n    if (localStorage.getItem('savedData')){\n        this.saved = JSON.parse(localStorage.getItem('savedData'));\n    }\n  },\n  mounted(){\n    console.log(this.$refs.images);\n    this.$refs.images.forEach( i => {\n        console.log(i,i.naturalWidth,i.naturalHeight)\n        if (i.naturalWidth>i.naturalHeight){\n            console.log(i)\n             i.classList.add('landscape')\n        }\n    }) \n  },\n  computed:{\n    notebook(){\n        console.log(this.$store.getters.notebook)\n        return this.$store.getters.notebook.filter(n=> n.Day==this.msg)\n      },\n    cards(){\n        console.log(this.$store.getters.cards)\n        return this.$store.getters.cards.filter(d=> d.map==this.msg)\n      },\n    images(){\n        console.log(this.$store.getters.images)\n        return this.$store.getters.images.filter(d=> d.day==this.msg)\n    }\n    }, \n  methods:{\n    getRatio(index){\n        console.log(this.$refs, index)\n    },\n\n    saveCard(card){\n        if (localStorage.getItem('savedData')){\n            this.saved = JSON.parse(localStorage.getItem('savedData'));\n        }\n        if (this.saved.cards.includes(card._id)){\n            console.log(this.saved.cards.indexOf(card._id))\n           this.saved.cards.splice(this.saved.cards.indexOf(card._id),1);\n        }else{\n            this.saved.cards.push(card._id);\n        }\n        localStorage.setItem('savedData',JSON.stringify(this.saved))\n    }, \n    getDay(id){\n        this.selectedDay = id\n    }, goToCard(d){\n        this.$router.push({path:'/card/'+d._id})\n    }, goToImage(d){\n        this.$router.push({path:'/image/'+d._id})\n    }, \n    onClickButton () {\n      this.$emit('goInfo','1')\n      this.$router.push({path:'/day'})\n    }\n  }\n};\n\n</script>\n\n<style scoped lang=\"scss\">\nbody{\n   background-color: #0C1028;\n}\n\np{\n    color: white;\n    text-align: left;\n}\n\n#title{\n    text-align: center;\n    font-size: 20px;\n}\n\n.flex{\n    display: flex;\n    flex-wrap: wrap;\n}\n\n.left{\n    width: 45%;\n}\n\n.cards{\n    margin-left: 55px;\n}\n\n.card{\n    display: flex;\n    width: 85%;\n    overflow-y: scroll;\n    scroll-behavior: smooth;\n}\n\nbutton{\n    border-style: none;\n    background-color: transparent;\n    margin: 0;\n    padding: 0;\n}\n\n.images {\n    width: 181px;\n    height: 181px;\n    background-color: hotpink;\n}\n\n.right{\n    width: 45%;\n    padding-left: 100px;\n    margin-top: 50px;\n}\n\n.right .notebook{\n    background-color: #6D707E;\n    padding: 10px 30px;\n    width: 75%;\n    height: 550px;\n    overflow-y: scroll;\n    scroll-behavior: smooth;\n    border-radius: 7%;\n    border-style: solid;\n    border-color: white;\n    border-width: thin;\n}\n\n.notebook p{\n    opacity: 1;\n}\n\nimg{\n    width: auto;\n    height: 218px;\n    margin: 10px;\n    border-radius: 7%;\n}\n\n.landscape{\n    width: auto;\n    height: 218px;\n}\n\ntemplate{\n    background-color: #0C1028;\n}\n\n.arrow{\n    padding-top: 50px;\n}\n\n.arrow a{\n    color: white;\n}\n\n.figures{\n    position: absolute;\n    margin-top: -565px;\n}\n\n.notebook{\n    position: relative;\n}\n\n.figures .oval{\n    width: 40px;\n    height: 16px;\n    border-radius: 30%;\n    background-color: white;\n    margin: 20px 0px;\n}\n\n</style>\n"]},"metadata":{},"sourceType":"module"}