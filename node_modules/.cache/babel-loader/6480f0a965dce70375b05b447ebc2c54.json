{"ast":null,"code":"import QrcodeVue from \"qrcode.vue\";\nimport { gsap } from \"gsap\";\nimport { Draggable } from \"gsap/Draggable\";\ngsap.registerPlugin(Draggable);\nexport default {\n  name: \"HomeView\",\n  data() {\n    return {\n      size: 300,\n      serial: 0\n    };\n  },\n  sockets: {\n    connect: function () {\n      console.log(\"socket connected\");\n    },\n    message: function (data) {\n      console.log('this method was fired by the socket server. eg: io.emit(\"customEmit\", data)');\n      console.log(\"data\", data);\n      let dades = data.split(\" \");\n      if (dades[2] == \"touched\") {\n        console.log(parseInt(dades[1]));\n        this.data(parseInt(dades[1]));\n      }\n    }\n  },\n  computed: {\n    data: {\n      get() {\n        return this.$store.getters.info[this.serial];\n      },\n      set(newSerial) {\n        return this.$store.getters.info[newSerial];\n      }\n    },\n    value() {\n      return this.data.url;\n    }\n  },\n  methods: {\n    changeSerial() {\n      this.serial = Math.floor(Math.random() * this.$store.getters.info.length);\n    }\n  },\n  watch: {\n    data: function (newData) {\n      console.log(\"changing\", newData);\n    },\n    serial: function (newSerial) {\n      console.log(\"change\", newSerial);\n      gsap.from(\".title\", {\n        delay: 0.5,\n        duration: 2.5,\n        autoAlpha: 0,\n        ease: \"elastic.out(1, 0.3)\",\n        x: -200\n      });\n      gsap.from(\".cos\", {\n        delay: 3,\n        duration: 2.5,\n        autoAlpha: 0,\n        ease: \"back.out(1, 0.3)\",\n        x: +400\n      });\n      gsap.from(\".intro\", {\n        delay: 1,\n        duration: 2.5,\n        x: -400,\n        autoAlpha: 0,\n        rotation: 360\n      });\n      this.data(newSerial);\n    }\n  },\n  components: {\n    QrcodeVue\n  }\n};","map":{"version":3,"mappings":"AAsBA;AACA;AACA;AAEAA;AAEA;EACAC;EAEAC;IACA;MACAC;MACAC;IACA;EACA;EACAC;IACAC;MACAC;IACA;IACAC;MACAD,YACA,8EACA;MACAA;MACA;MACA;QACAA;QACA;MACA;IACA;EACA;EAEAE;IACAP;MACAQ;QACA;MACA;MACAC;QACA;MACA;IACA;IACAC;MACA;IACA;EACA;EACAC;IACAC;MACA;IACA;EACA;EACAC;IACAb;MACAK;IACA;IAEAH;MACAG;MAEAP;QACAgB;QACAC;QACAC;QACAC;QACAC;MACA;MAEApB;QACAgB;QACAC;QACAC;QACAC;QACAC;MACA;MAEApB;QACAgB;QACAC;QACAG;QACAF;QACAG;MACA;MAEA;IACA;EACA;EAEAC;IACAC;EACA;AACA","names":["gsap","name","data","size","serial","sockets","connect","console","message","computed","get","set","value","methods","changeSerial","watch","delay","duration","autoAlpha","ease","x","rotation","components","QrcodeVue"],"sourceRoot":"src/views","sources":["WelcomeView.vue"],"sourcesContent":["<template>\n  <div>\n    <button @click=\"changeSerial()\">SERIAL</button>\n    <div class=\"title\" ref=\"title\">\n      <h1>{{ data.titol }}</h1>\n    </div>\n    <div class=\"intro\">\n      <h2>hola hola hola hola</h2>\n    </div>\n    <div class=\"cos\">\n      <p>ljvnhjlvbhjbhbeveghvb ihfbvhwkrewhjbvhr huibhrebgvuhwkb</p>\n    </div>\n    <div class=\"flex\">\n      <div class=\"img\"><img :src=\"data.fitxer\" alt=\"\" /></div>\n      <div v-if=\"value\">\n        <qrcode-vue :value=\"value\" :size=\"size\" level=\"H\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport QrcodeVue from \"qrcode.vue\";\nimport { gsap } from \"gsap\";\nimport { Draggable } from \"gsap/Draggable\";\n\ngsap.registerPlugin(Draggable);\n\nexport default {\n  name: \"HomeView\",\n\n  data() {\n    return {\n      size: 300,\n      serial: 0,\n    };\n  },\n  sockets: {\n    connect: function () {\n      console.log(\"socket connected\");\n    },\n    message: function (data) {\n      console.log(\n        'this method was fired by the socket server. eg: io.emit(\"customEmit\", data)'\n      );\n      console.log(\"data\", data);\n      let dades = data.split(\" \");\n      if (dades[2] == \"touched\") {\n        console.log(parseInt(dades[1]));\n        this.data(parseInt(dades[1]));\n      }\n    },\n  },\n\n  computed: {\n    data: {\n      get() {\n        return this.$store.getters.info[this.serial];\n      },\n      set(newSerial) {\n        return this.$store.getters.info[newSerial];\n      },\n    },\n    value() {\n      return this.data.url;\n    },\n  },\n  methods: {\n    changeSerial() {\n      this.serial = Math.floor(Math.random() * this.$store.getters.info.length);\n    },\n  },\n  watch: {\n    data: function (newData) {\n      console.log(\"changing\", newData);\n    },\n\n    serial: function (newSerial) {\n      console.log(\"change\", newSerial);\n\n      gsap.from(\".title\", {\n        delay: 0.5,\n        duration: 2.5,\n        autoAlpha: 0,\n        ease: \"elastic.out(1, 0.3)\",\n        x: -200,\n      });\n\n      gsap.from(\".cos\", {\n        delay: 3,\n        duration: 2.5,\n        autoAlpha: 0,\n        ease: \"back.out(1, 0.3)\",\n        x: +400,\n      });\n\n      gsap.from(\".intro\", {\n        delay: 1,\n        duration: 2.5,\n        x: -400,\n        autoAlpha: 0,\n        rotation: 360,\n      });\n\n      this.data(newSerial);\n    },\n  },\n\n  components: {\n    QrcodeVue,\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n</style>"]},"metadata":{},"sourceType":"module"}