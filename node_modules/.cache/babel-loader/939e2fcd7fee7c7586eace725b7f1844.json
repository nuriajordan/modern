{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/*!\n * qrcode.vue v1.7.0\n * A Vue component to generate QRCode.\n * Â© 2017-2019 @scopewu(https://github.com/scopewu)\n * MIT License.\n */\nvar mode = {\n  MODE_NUMBER: 1 << 0,\n  MODE_ALPHA_NUM: 1 << 1,\n  MODE_8BIT_BYTE: 1 << 2,\n  MODE_KANJI: 1 << 3\n};\nfunction QR8bitByte(data) {\n  this.mode = mode.MODE_8BIT_BYTE;\n  this.data = data;\n}\nQR8bitByte.prototype = {\n  getLength: function (buffer) {\n    return this.data.length;\n  },\n  write: function (buffer) {\n    for (var i = 0; i < this.data.length; i++) {\n      // not JIS ...\n      buffer.put(this.data.charCodeAt(i), 8);\n    }\n  }\n};\nvar _8BitByte = QR8bitByte;\nvar ErrorCorrectLevel = {\n  L: 1,\n  M: 0,\n  Q: 3,\n  H: 2\n};\nfunction QRRSBlock(totalCount, dataCount) {\n  this.totalCount = totalCount;\n  this.dataCount = dataCount;\n}\nQRRSBlock.RS_BLOCK_TABLE = [\n// L\n// M\n// Q\n// H\n// 1\n[1, 26, 19], [1, 26, 16], [1, 26, 13], [1, 26, 9],\n// 2\n[1, 44, 34], [1, 44, 28], [1, 44, 22], [1, 44, 16],\n// 3\n[1, 70, 55], [1, 70, 44], [2, 35, 17], [2, 35, 13],\n// 4\t\t\n[1, 100, 80], [2, 50, 32], [2, 50, 24], [4, 25, 9],\n// 5\n[1, 134, 108], [2, 67, 43], [2, 33, 15, 2, 34, 16], [2, 33, 11, 2, 34, 12],\n// 6\n[2, 86, 68], [4, 43, 27], [4, 43, 19], [4, 43, 15],\n// 7\t\t\n[2, 98, 78], [4, 49, 31], [2, 32, 14, 4, 33, 15], [4, 39, 13, 1, 40, 14],\n// 8\n[2, 121, 97], [2, 60, 38, 2, 61, 39], [4, 40, 18, 2, 41, 19], [4, 40, 14, 2, 41, 15],\n// 9\n[2, 146, 116], [3, 58, 36, 2, 59, 37], [4, 36, 16, 4, 37, 17], [4, 36, 12, 4, 37, 13],\n// 10\t\t\n[2, 86, 68, 2, 87, 69], [4, 69, 43, 1, 70, 44], [6, 43, 19, 2, 44, 20], [6, 43, 15, 2, 44, 16],\n// 11\n[4, 101, 81], [1, 80, 50, 4, 81, 51], [4, 50, 22, 4, 51, 23], [3, 36, 12, 8, 37, 13],\n// 12\n[2, 116, 92, 2, 117, 93], [6, 58, 36, 2, 59, 37], [4, 46, 20, 6, 47, 21], [7, 42, 14, 4, 43, 15],\n// 13\n[4, 133, 107], [8, 59, 37, 1, 60, 38], [8, 44, 20, 4, 45, 21], [12, 33, 11, 4, 34, 12],\n// 14\n[3, 145, 115, 1, 146, 116], [4, 64, 40, 5, 65, 41], [11, 36, 16, 5, 37, 17], [11, 36, 12, 5, 37, 13],\n// 15\n[5, 109, 87, 1, 110, 88], [5, 65, 41, 5, 66, 42], [5, 54, 24, 7, 55, 25], [11, 36, 12],\n// 16\n[5, 122, 98, 1, 123, 99], [7, 73, 45, 3, 74, 46], [15, 43, 19, 2, 44, 20], [3, 45, 15, 13, 46, 16],\n// 17\n[1, 135, 107, 5, 136, 108], [10, 74, 46, 1, 75, 47], [1, 50, 22, 15, 51, 23], [2, 42, 14, 17, 43, 15],\n// 18\n[5, 150, 120, 1, 151, 121], [9, 69, 43, 4, 70, 44], [17, 50, 22, 1, 51, 23], [2, 42, 14, 19, 43, 15],\n// 19\n[3, 141, 113, 4, 142, 114], [3, 70, 44, 11, 71, 45], [17, 47, 21, 4, 48, 22], [9, 39, 13, 16, 40, 14],\n// 20\n[3, 135, 107, 5, 136, 108], [3, 67, 41, 13, 68, 42], [15, 54, 24, 5, 55, 25], [15, 43, 15, 10, 44, 16],\n// 21\n[4, 144, 116, 4, 145, 117], [17, 68, 42], [17, 50, 22, 6, 51, 23], [19, 46, 16, 6, 47, 17],\n// 22\n[2, 139, 111, 7, 140, 112], [17, 74, 46], [7, 54, 24, 16, 55, 25], [34, 37, 13],\n// 23\n[4, 151, 121, 5, 152, 122], [4, 75, 47, 14, 76, 48], [11, 54, 24, 14, 55, 25], [16, 45, 15, 14, 46, 16],\n// 24\n[6, 147, 117, 4, 148, 118], [6, 73, 45, 14, 74, 46], [11, 54, 24, 16, 55, 25], [30, 46, 16, 2, 47, 17],\n// 25\n[8, 132, 106, 4, 133, 107], [8, 75, 47, 13, 76, 48], [7, 54, 24, 22, 55, 25], [22, 45, 15, 13, 46, 16],\n// 26\n[10, 142, 114, 2, 143, 115], [19, 74, 46, 4, 75, 47], [28, 50, 22, 6, 51, 23], [33, 46, 16, 4, 47, 17],\n// 27\n[8, 152, 122, 4, 153, 123], [22, 73, 45, 3, 74, 46], [8, 53, 23, 26, 54, 24], [12, 45, 15, 28, 46, 16],\n// 28\n[3, 147, 117, 10, 148, 118], [3, 73, 45, 23, 74, 46], [4, 54, 24, 31, 55, 25], [11, 45, 15, 31, 46, 16],\n// 29\n[7, 146, 116, 7, 147, 117], [21, 73, 45, 7, 74, 46], [1, 53, 23, 37, 54, 24], [19, 45, 15, 26, 46, 16],\n// 30\n[5, 145, 115, 10, 146, 116], [19, 75, 47, 10, 76, 48], [15, 54, 24, 25, 55, 25], [23, 45, 15, 25, 46, 16],\n// 31\n[13, 145, 115, 3, 146, 116], [2, 74, 46, 29, 75, 47], [42, 54, 24, 1, 55, 25], [23, 45, 15, 28, 46, 16],\n// 32\n[17, 145, 115], [10, 74, 46, 23, 75, 47], [10, 54, 24, 35, 55, 25], [19, 45, 15, 35, 46, 16],\n// 33\n[17, 145, 115, 1, 146, 116], [14, 74, 46, 21, 75, 47], [29, 54, 24, 19, 55, 25], [11, 45, 15, 46, 46, 16],\n// 34\n[13, 145, 115, 6, 146, 116], [14, 74, 46, 23, 75, 47], [44, 54, 24, 7, 55, 25], [59, 46, 16, 1, 47, 17],\n// 35\n[12, 151, 121, 7, 152, 122], [12, 75, 47, 26, 76, 48], [39, 54, 24, 14, 55, 25], [22, 45, 15, 41, 46, 16],\n// 36\n[6, 151, 121, 14, 152, 122], [6, 75, 47, 34, 76, 48], [46, 54, 24, 10, 55, 25], [2, 45, 15, 64, 46, 16],\n// 37\n[17, 152, 122, 4, 153, 123], [29, 74, 46, 14, 75, 47], [49, 54, 24, 10, 55, 25], [24, 45, 15, 46, 46, 16],\n// 38\n[4, 152, 122, 18, 153, 123], [13, 74, 46, 32, 75, 47], [48, 54, 24, 14, 55, 25], [42, 45, 15, 32, 46, 16],\n// 39\n[20, 147, 117, 4, 148, 118], [40, 75, 47, 7, 76, 48], [43, 54, 24, 22, 55, 25], [10, 45, 15, 67, 46, 16],\n// 40\n[19, 148, 118, 6, 149, 119], [18, 75, 47, 31, 76, 48], [34, 54, 24, 34, 55, 25], [20, 45, 15, 61, 46, 16]];\nQRRSBlock.getRSBlocks = function (typeNumber, errorCorrectLevel) {\n  var rsBlock = QRRSBlock.getRsBlockTable(typeNumber, errorCorrectLevel);\n  if (rsBlock == undefined) {\n    throw new Error(\"bad rs block @ typeNumber:\" + typeNumber + \"/errorCorrectLevel:\" + errorCorrectLevel);\n  }\n  var length = rsBlock.length / 3;\n  var list = new Array();\n  for (var i = 0; i < length; i++) {\n    var count = rsBlock[i * 3 + 0];\n    var totalCount = rsBlock[i * 3 + 1];\n    var dataCount = rsBlock[i * 3 + 2];\n    for (var j = 0; j < count; j++) {\n      list.push(new QRRSBlock(totalCount, dataCount));\n    }\n  }\n  return list;\n};\nQRRSBlock.getRsBlockTable = function (typeNumber, errorCorrectLevel) {\n  switch (errorCorrectLevel) {\n    case ErrorCorrectLevel.L:\n      return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 0];\n    case ErrorCorrectLevel.M:\n      return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1];\n    case ErrorCorrectLevel.Q:\n      return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2];\n    case ErrorCorrectLevel.H:\n      return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3];\n    default:\n      return undefined;\n  }\n};\nvar RSBlock = QRRSBlock;\nfunction QRBitBuffer() {\n  this.buffer = new Array();\n  this.length = 0;\n}\nQRBitBuffer.prototype = {\n  get: function (index) {\n    var bufIndex = Math.floor(index / 8);\n    return (this.buffer[bufIndex] >>> 7 - index % 8 & 1) == 1;\n  },\n  put: function (num, length) {\n    for (var i = 0; i < length; i++) {\n      this.putBit((num >>> length - i - 1 & 1) == 1);\n    }\n  },\n  getLengthInBits: function () {\n    return this.length;\n  },\n  putBit: function (bit) {\n    var bufIndex = Math.floor(this.length / 8);\n    if (this.buffer.length <= bufIndex) {\n      this.buffer.push(0);\n    }\n    if (bit) {\n      this.buffer[bufIndex] |= 0x80 >>> this.length % 8;\n    }\n    this.length++;\n  }\n};\nvar BitBuffer = QRBitBuffer;\nvar QRMath = {\n  glog: function (n) {\n    if (n < 1) {\n      throw new Error(\"glog(\" + n + \")\");\n    }\n    return QRMath.LOG_TABLE[n];\n  },\n  gexp: function (n) {\n    while (n < 0) {\n      n += 255;\n    }\n    while (n >= 256) {\n      n -= 255;\n    }\n    return QRMath.EXP_TABLE[n];\n  },\n  EXP_TABLE: new Array(256),\n  LOG_TABLE: new Array(256)\n};\nfor (var i = 0; i < 8; i++) {\n  QRMath.EXP_TABLE[i] = 1 << i;\n}\nfor (var i = 8; i < 256; i++) {\n  QRMath.EXP_TABLE[i] = QRMath.EXP_TABLE[i - 4] ^ QRMath.EXP_TABLE[i - 5] ^ QRMath.EXP_TABLE[i - 6] ^ QRMath.EXP_TABLE[i - 8];\n}\nfor (var i = 0; i < 255; i++) {\n  QRMath.LOG_TABLE[QRMath.EXP_TABLE[i]] = i;\n}\nvar math = QRMath;\nfunction QRPolynomial(num, shift) {\n  if (num.length == undefined) {\n    throw new Error(num.length + \"/\" + shift);\n  }\n  var offset = 0;\n  while (offset < num.length && num[offset] == 0) {\n    offset++;\n  }\n  this.num = new Array(num.length - offset + shift);\n  for (var i = 0; i < num.length - offset; i++) {\n    this.num[i] = num[i + offset];\n  }\n}\nQRPolynomial.prototype = {\n  get: function (index) {\n    return this.num[index];\n  },\n  getLength: function () {\n    return this.num.length;\n  },\n  multiply: function (e) {\n    var num = new Array(this.getLength() + e.getLength() - 1);\n    for (var i = 0; i < this.getLength(); i++) {\n      for (var j = 0; j < e.getLength(); j++) {\n        num[i + j] ^= math.gexp(math.glog(this.get(i)) + math.glog(e.get(j)));\n      }\n    }\n    return new QRPolynomial(num, 0);\n  },\n  mod: function (e) {\n    if (this.getLength() - e.getLength() < 0) {\n      return this;\n    }\n    var ratio = math.glog(this.get(0)) - math.glog(e.get(0));\n    var num = new Array(this.getLength());\n    for (var i = 0; i < this.getLength(); i++) {\n      num[i] = this.get(i);\n    }\n    for (var i = 0; i < e.getLength(); i++) {\n      num[i] ^= math.gexp(math.glog(e.get(i)) + ratio);\n    } // recursive call\n\n    return new QRPolynomial(num, 0).mod(e);\n  }\n};\nvar Polynomial = QRPolynomial;\nvar QRMaskPattern = {\n  PATTERN000: 0,\n  PATTERN001: 1,\n  PATTERN010: 2,\n  PATTERN011: 3,\n  PATTERN100: 4,\n  PATTERN101: 5,\n  PATTERN110: 6,\n  PATTERN111: 7\n};\nvar QRUtil = {\n  PATTERN_POSITION_TABLE: [[], [6, 18], [6, 22], [6, 26], [6, 30], [6, 34], [6, 22, 38], [6, 24, 42], [6, 26, 46], [6, 28, 50], [6, 30, 54], [6, 32, 58], [6, 34, 62], [6, 26, 46, 66], [6, 26, 48, 70], [6, 26, 50, 74], [6, 30, 54, 78], [6, 30, 56, 82], [6, 30, 58, 86], [6, 34, 62, 90], [6, 28, 50, 72, 94], [6, 26, 50, 74, 98], [6, 30, 54, 78, 102], [6, 28, 54, 80, 106], [6, 32, 58, 84, 110], [6, 30, 58, 86, 114], [6, 34, 62, 90, 118], [6, 26, 50, 74, 98, 122], [6, 30, 54, 78, 102, 126], [6, 26, 52, 78, 104, 130], [6, 30, 56, 82, 108, 134], [6, 34, 60, 86, 112, 138], [6, 30, 58, 86, 114, 142], [6, 34, 62, 90, 118, 146], [6, 30, 54, 78, 102, 126, 150], [6, 24, 50, 76, 102, 128, 154], [6, 28, 54, 80, 106, 132, 158], [6, 32, 58, 84, 110, 136, 162], [6, 26, 54, 82, 110, 138, 166], [6, 30, 58, 86, 114, 142, 170]],\n  G15: 1 << 10 | 1 << 8 | 1 << 5 | 1 << 4 | 1 << 2 | 1 << 1 | 1 << 0,\n  G18: 1 << 12 | 1 << 11 | 1 << 10 | 1 << 9 | 1 << 8 | 1 << 5 | 1 << 2 | 1 << 0,\n  G15_MASK: 1 << 14 | 1 << 12 | 1 << 10 | 1 << 4 | 1 << 1,\n  getBCHTypeInfo: function (data) {\n    var d = data << 10;\n    while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) >= 0) {\n      d ^= QRUtil.G15 << QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15);\n    }\n    return (data << 10 | d) ^ QRUtil.G15_MASK;\n  },\n  getBCHTypeNumber: function (data) {\n    var d = data << 12;\n    while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) >= 0) {\n      d ^= QRUtil.G18 << QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18);\n    }\n    return data << 12 | d;\n  },\n  getBCHDigit: function (data) {\n    var digit = 0;\n    while (data != 0) {\n      digit++;\n      data >>>= 1;\n    }\n    return digit;\n  },\n  getPatternPosition: function (typeNumber) {\n    return QRUtil.PATTERN_POSITION_TABLE[typeNumber - 1];\n  },\n  getMask: function (maskPattern, i, j) {\n    switch (maskPattern) {\n      case QRMaskPattern.PATTERN000:\n        return (i + j) % 2 == 0;\n      case QRMaskPattern.PATTERN001:\n        return i % 2 == 0;\n      case QRMaskPattern.PATTERN010:\n        return j % 3 == 0;\n      case QRMaskPattern.PATTERN011:\n        return (i + j) % 3 == 0;\n      case QRMaskPattern.PATTERN100:\n        return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 == 0;\n      case QRMaskPattern.PATTERN101:\n        return i * j % 2 + i * j % 3 == 0;\n      case QRMaskPattern.PATTERN110:\n        return (i * j % 2 + i * j % 3) % 2 == 0;\n      case QRMaskPattern.PATTERN111:\n        return (i * j % 3 + (i + j) % 2) % 2 == 0;\n      default:\n        throw new Error(\"bad maskPattern:\" + maskPattern);\n    }\n  },\n  getErrorCorrectPolynomial: function (errorCorrectLength) {\n    var a = new Polynomial([1], 0);\n    for (var i = 0; i < errorCorrectLength; i++) {\n      a = a.multiply(new Polynomial([1, math.gexp(i)], 0));\n    }\n    return a;\n  },\n  getLengthInBits: function (mode$1, type) {\n    if (1 <= type && type < 10) {\n      // 1 - 9\n      switch (mode$1) {\n        case mode.MODE_NUMBER:\n          return 10;\n        case mode.MODE_ALPHA_NUM:\n          return 9;\n        case mode.MODE_8BIT_BYTE:\n          return 8;\n        case mode.MODE_KANJI:\n          return 8;\n        default:\n          throw new Error(\"mode:\" + mode$1);\n      }\n    } else if (type < 27) {\n      // 10 - 26\n      switch (mode$1) {\n        case mode.MODE_NUMBER:\n          return 12;\n        case mode.MODE_ALPHA_NUM:\n          return 11;\n        case mode.MODE_8BIT_BYTE:\n          return 16;\n        case mode.MODE_KANJI:\n          return 10;\n        default:\n          throw new Error(\"mode:\" + mode$1);\n      }\n    } else if (type < 41) {\n      // 27 - 40\n      switch (mode$1) {\n        case mode.MODE_NUMBER:\n          return 14;\n        case mode.MODE_ALPHA_NUM:\n          return 13;\n        case mode.MODE_8BIT_BYTE:\n          return 16;\n        case mode.MODE_KANJI:\n          return 12;\n        default:\n          throw new Error(\"mode:\" + mode$1);\n      }\n    } else {\n      throw new Error(\"type:\" + type);\n    }\n  },\n  getLostPoint: function (qrCode) {\n    var moduleCount = qrCode.getModuleCount();\n    var lostPoint = 0; // LEVEL1\n\n    for (var row = 0; row < moduleCount; row++) {\n      for (var col = 0; col < moduleCount; col++) {\n        var sameCount = 0;\n        var dark = qrCode.isDark(row, col);\n        for (var r = -1; r <= 1; r++) {\n          if (row + r < 0 || moduleCount <= row + r) {\n            continue;\n          }\n          for (var c = -1; c <= 1; c++) {\n            if (col + c < 0 || moduleCount <= col + c) {\n              continue;\n            }\n            if (r == 0 && c == 0) {\n              continue;\n            }\n            if (dark == qrCode.isDark(row + r, col + c)) {\n              sameCount++;\n            }\n          }\n        }\n        if (sameCount > 5) {\n          lostPoint += 3 + sameCount - 5;\n        }\n      }\n    } // LEVEL2\n\n    for (var row = 0; row < moduleCount - 1; row++) {\n      for (var col = 0; col < moduleCount - 1; col++) {\n        var count = 0;\n        if (qrCode.isDark(row, col)) count++;\n        if (qrCode.isDark(row + 1, col)) count++;\n        if (qrCode.isDark(row, col + 1)) count++;\n        if (qrCode.isDark(row + 1, col + 1)) count++;\n        if (count == 0 || count == 4) {\n          lostPoint += 3;\n        }\n      }\n    } // LEVEL3\n\n    for (var row = 0; row < moduleCount; row++) {\n      for (var col = 0; col < moduleCount - 6; col++) {\n        if (qrCode.isDark(row, col) && !qrCode.isDark(row, col + 1) && qrCode.isDark(row, col + 2) && qrCode.isDark(row, col + 3) && qrCode.isDark(row, col + 4) && !qrCode.isDark(row, col + 5) && qrCode.isDark(row, col + 6)) {\n          lostPoint += 40;\n        }\n      }\n    }\n    for (var col = 0; col < moduleCount; col++) {\n      for (var row = 0; row < moduleCount - 6; row++) {\n        if (qrCode.isDark(row, col) && !qrCode.isDark(row + 1, col) && qrCode.isDark(row + 2, col) && qrCode.isDark(row + 3, col) && qrCode.isDark(row + 4, col) && !qrCode.isDark(row + 5, col) && qrCode.isDark(row + 6, col)) {\n          lostPoint += 40;\n        }\n      }\n    } // LEVEL4\n\n    var darkCount = 0;\n    for (var col = 0; col < moduleCount; col++) {\n      for (var row = 0; row < moduleCount; row++) {\n        if (qrCode.isDark(row, col)) {\n          darkCount++;\n        }\n      }\n    }\n    var ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;\n    lostPoint += ratio * 10;\n    return lostPoint;\n  }\n};\nvar util = QRUtil;\nfunction QRCode(typeNumber, errorCorrectLevel) {\n  this.typeNumber = typeNumber;\n  this.errorCorrectLevel = errorCorrectLevel;\n  this.modules = null;\n  this.moduleCount = 0;\n  this.dataCache = null;\n  this.dataList = [];\n} // for client side minification\n\nvar proto = QRCode.prototype;\nproto.addData = function (data) {\n  var newData = new _8BitByte(data);\n  this.dataList.push(newData);\n  this.dataCache = null;\n};\nproto.isDark = function (row, col) {\n  if (row < 0 || this.moduleCount <= row || col < 0 || this.moduleCount <= col) {\n    throw new Error(row + \",\" + col);\n  }\n  return this.modules[row][col];\n};\nproto.getModuleCount = function () {\n  return this.moduleCount;\n};\nproto.make = function () {\n  // Calculate automatically typeNumber if provided is < 1\n  if (this.typeNumber < 1) {\n    var typeNumber = 1;\n    for (typeNumber = 1; typeNumber < 40; typeNumber++) {\n      var rsBlocks = RSBlock.getRSBlocks(typeNumber, this.errorCorrectLevel);\n      var buffer = new BitBuffer();\n      var totalDataCount = 0;\n      for (var i = 0; i < rsBlocks.length; i++) {\n        totalDataCount += rsBlocks[i].dataCount;\n      }\n      for (var i = 0; i < this.dataList.length; i++) {\n        var data = this.dataList[i];\n        buffer.put(data.mode, 4);\n        buffer.put(data.getLength(), util.getLengthInBits(data.mode, typeNumber));\n        data.write(buffer);\n      }\n      if (buffer.getLengthInBits() <= totalDataCount * 8) break;\n    }\n    this.typeNumber = typeNumber;\n  }\n  this.makeImpl(false, this.getBestMaskPattern());\n};\nproto.makeImpl = function (test, maskPattern) {\n  this.moduleCount = this.typeNumber * 4 + 17;\n  this.modules = new Array(this.moduleCount);\n  for (var row = 0; row < this.moduleCount; row++) {\n    this.modules[row] = new Array(this.moduleCount);\n    for (var col = 0; col < this.moduleCount; col++) {\n      this.modules[row][col] = null; //(col + row) % 3;\n    }\n  }\n\n  this.setupPositionProbePattern(0, 0);\n  this.setupPositionProbePattern(this.moduleCount - 7, 0);\n  this.setupPositionProbePattern(0, this.moduleCount - 7);\n  this.setupPositionAdjustPattern();\n  this.setupTimingPattern();\n  this.setupTypeInfo(test, maskPattern);\n  if (this.typeNumber >= 7) {\n    this.setupTypeNumber(test);\n  }\n  if (this.dataCache == null) {\n    this.dataCache = QRCode.createData(this.typeNumber, this.errorCorrectLevel, this.dataList);\n  }\n  this.mapData(this.dataCache, maskPattern);\n};\nproto.setupPositionProbePattern = function (row, col) {\n  for (var r = -1; r <= 7; r++) {\n    if (row + r <= -1 || this.moduleCount <= row + r) continue;\n    for (var c = -1; c <= 7; c++) {\n      if (col + c <= -1 || this.moduleCount <= col + c) continue;\n      if (0 <= r && r <= 6 && (c == 0 || c == 6) || 0 <= c && c <= 6 && (r == 0 || r == 6) || 2 <= r && r <= 4 && 2 <= c && c <= 4) {\n        this.modules[row + r][col + c] = true;\n      } else {\n        this.modules[row + r][col + c] = false;\n      }\n    }\n  }\n};\nproto.getBestMaskPattern = function () {\n  var minLostPoint = 0;\n  var pattern = 0;\n  for (var i = 0; i < 8; i++) {\n    this.makeImpl(true, i);\n    var lostPoint = util.getLostPoint(this);\n    if (i == 0 || minLostPoint > lostPoint) {\n      minLostPoint = lostPoint;\n      pattern = i;\n    }\n  }\n  return pattern;\n};\nproto.createMovieClip = function (target_mc, instance_name, depth) {\n  var qr_mc = target_mc.createEmptyMovieClip(instance_name, depth);\n  var cs = 1;\n  this.make();\n  for (var row = 0; row < this.modules.length; row++) {\n    var y = row * cs;\n    for (var col = 0; col < this.modules[row].length; col++) {\n      var x = col * cs;\n      var dark = this.modules[row][col];\n      if (dark) {\n        qr_mc.beginFill(0, 100);\n        qr_mc.moveTo(x, y);\n        qr_mc.lineTo(x + cs, y);\n        qr_mc.lineTo(x + cs, y + cs);\n        qr_mc.lineTo(x, y + cs);\n        qr_mc.endFill();\n      }\n    }\n  }\n  return qr_mc;\n};\nproto.setupTimingPattern = function () {\n  for (var r = 8; r < this.moduleCount - 8; r++) {\n    if (this.modules[r][6] != null) {\n      continue;\n    }\n    this.modules[r][6] = r % 2 == 0;\n  }\n  for (var c = 8; c < this.moduleCount - 8; c++) {\n    if (this.modules[6][c] != null) {\n      continue;\n    }\n    this.modules[6][c] = c % 2 == 0;\n  }\n};\nproto.setupPositionAdjustPattern = function () {\n  var pos = util.getPatternPosition(this.typeNumber);\n  for (var i = 0; i < pos.length; i++) {\n    for (var j = 0; j < pos.length; j++) {\n      var row = pos[i];\n      var col = pos[j];\n      if (this.modules[row][col] != null) {\n        continue;\n      }\n      for (var r = -2; r <= 2; r++) {\n        for (var c = -2; c <= 2; c++) {\n          if (r == -2 || r == 2 || c == -2 || c == 2 || r == 0 && c == 0) {\n            this.modules[row + r][col + c] = true;\n          } else {\n            this.modules[row + r][col + c] = false;\n          }\n        }\n      }\n    }\n  }\n};\nproto.setupTypeNumber = function (test) {\n  var bits = util.getBCHTypeNumber(this.typeNumber);\n  for (var i = 0; i < 18; i++) {\n    var mod = !test && (bits >> i & 1) == 1;\n    this.modules[Math.floor(i / 3)][i % 3 + this.moduleCount - 8 - 3] = mod;\n  }\n  for (var i = 0; i < 18; i++) {\n    var mod = !test && (bits >> i & 1) == 1;\n    this.modules[i % 3 + this.moduleCount - 8 - 3][Math.floor(i / 3)] = mod;\n  }\n};\nproto.setupTypeInfo = function (test, maskPattern) {\n  var data = this.errorCorrectLevel << 3 | maskPattern;\n  var bits = util.getBCHTypeInfo(data); // vertical\t\t\n\n  for (var i = 0; i < 15; i++) {\n    var mod = !test && (bits >> i & 1) == 1;\n    if (i < 6) {\n      this.modules[i][8] = mod;\n    } else if (i < 8) {\n      this.modules[i + 1][8] = mod;\n    } else {\n      this.modules[this.moduleCount - 15 + i][8] = mod;\n    }\n  } // horizontal\n\n  for (var i = 0; i < 15; i++) {\n    var mod = !test && (bits >> i & 1) == 1;\n    if (i < 8) {\n      this.modules[8][this.moduleCount - i - 1] = mod;\n    } else if (i < 9) {\n      this.modules[8][15 - i - 1 + 1] = mod;\n    } else {\n      this.modules[8][15 - i - 1] = mod;\n    }\n  } // fixed module\n\n  this.modules[this.moduleCount - 8][8] = !test;\n};\nproto.mapData = function (data, maskPattern) {\n  var inc = -1;\n  var row = this.moduleCount - 1;\n  var bitIndex = 7;\n  var byteIndex = 0;\n  for (var col = this.moduleCount - 1; col > 0; col -= 2) {\n    if (col == 6) col--;\n    while (true) {\n      for (var c = 0; c < 2; c++) {\n        if (this.modules[row][col - c] == null) {\n          var dark = false;\n          if (byteIndex < data.length) {\n            dark = (data[byteIndex] >>> bitIndex & 1) == 1;\n          }\n          var mask = util.getMask(maskPattern, row, col - c);\n          if (mask) {\n            dark = !dark;\n          }\n          this.modules[row][col - c] = dark;\n          bitIndex--;\n          if (bitIndex == -1) {\n            byteIndex++;\n            bitIndex = 7;\n          }\n        }\n      }\n      row += inc;\n      if (row < 0 || this.moduleCount <= row) {\n        row -= inc;\n        inc = -inc;\n        break;\n      }\n    }\n  }\n};\nQRCode.PAD0 = 0xEC;\nQRCode.PAD1 = 0x11;\nQRCode.createData = function (typeNumber, errorCorrectLevel, dataList) {\n  var rsBlocks = RSBlock.getRSBlocks(typeNumber, errorCorrectLevel);\n  var buffer = new BitBuffer();\n  for (var i = 0; i < dataList.length; i++) {\n    var data = dataList[i];\n    buffer.put(data.mode, 4);\n    buffer.put(data.getLength(), util.getLengthInBits(data.mode, typeNumber));\n    data.write(buffer);\n  } // calc num max data.\n\n  var totalDataCount = 0;\n  for (var i = 0; i < rsBlocks.length; i++) {\n    totalDataCount += rsBlocks[i].dataCount;\n  }\n  if (buffer.getLengthInBits() > totalDataCount * 8) {\n    throw new Error(\"code length overflow. (\" + buffer.getLengthInBits() + \">\" + totalDataCount * 8 + \")\");\n  } // end code\n\n  if (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {\n    buffer.put(0, 4);\n  } // padding\n\n  while (buffer.getLengthInBits() % 8 != 0) {\n    buffer.putBit(false);\n  } // padding\n\n  while (true) {\n    if (buffer.getLengthInBits() >= totalDataCount * 8) {\n      break;\n    }\n    buffer.put(QRCode.PAD0, 8);\n    if (buffer.getLengthInBits() >= totalDataCount * 8) {\n      break;\n    }\n    buffer.put(QRCode.PAD1, 8);\n  }\n  return QRCode.createBytes(buffer, rsBlocks);\n};\nQRCode.createBytes = function (buffer, rsBlocks) {\n  var offset = 0;\n  var maxDcCount = 0;\n  var maxEcCount = 0;\n  var dcdata = new Array(rsBlocks.length);\n  var ecdata = new Array(rsBlocks.length);\n  for (var r = 0; r < rsBlocks.length; r++) {\n    var dcCount = rsBlocks[r].dataCount;\n    var ecCount = rsBlocks[r].totalCount - dcCount;\n    maxDcCount = Math.max(maxDcCount, dcCount);\n    maxEcCount = Math.max(maxEcCount, ecCount);\n    dcdata[r] = new Array(dcCount);\n    for (var i = 0; i < dcdata[r].length; i++) {\n      dcdata[r][i] = 0xff & buffer.buffer[i + offset];\n    }\n    offset += dcCount;\n    var rsPoly = util.getErrorCorrectPolynomial(ecCount);\n    var rawPoly = new Polynomial(dcdata[r], rsPoly.getLength() - 1);\n    var modPoly = rawPoly.mod(rsPoly);\n    ecdata[r] = new Array(rsPoly.getLength() - 1);\n    for (var i = 0; i < ecdata[r].length; i++) {\n      var modIndex = i + modPoly.getLength() - ecdata[r].length;\n      ecdata[r][i] = modIndex >= 0 ? modPoly.get(modIndex) : 0;\n    }\n  }\n  var totalCodeCount = 0;\n  for (var i = 0; i < rsBlocks.length; i++) {\n    totalCodeCount += rsBlocks[i].totalCount;\n  }\n  var data = new Array(totalCodeCount);\n  var index = 0;\n  for (var i = 0; i < maxDcCount; i++) {\n    for (var r = 0; r < rsBlocks.length; r++) {\n      if (i < dcdata[r].length) {\n        data[index++] = dcdata[r][i];\n      }\n    }\n  }\n  for (var i = 0; i < maxEcCount; i++) {\n    for (var r = 0; r < rsBlocks.length; r++) {\n      if (i < ecdata[r].length) {\n        data[index++] = ecdata[r][i];\n      }\n    }\n  }\n  return data;\n};\nvar QRCode_1 = QRCode;\n\n/**\n * Encode UTF16 to UTF8.\n * See: http://jonisalonen.com/2012/from-utf-16-to-utf-8-in-javascript/\n * @param str {string}\n * @returns {string}\n */\n\nfunction toUTF8String(str) {\n  var utf8Str = '';\n  for (var i = 0; i < str.length; i++) {\n    var charCode = str.charCodeAt(i);\n    if (charCode < 0x0080) {\n      utf8Str += String.fromCharCode(charCode);\n    } else if (charCode < 0x0800) {\n      utf8Str += String.fromCharCode(0xc0 | charCode >> 6);\n      utf8Str += String.fromCharCode(0x80 | charCode & 0x3f);\n    } else if (charCode < 0xd800 || charCode >= 0xe000) {\n      utf8Str += String.fromCharCode(0xe0 | charCode >> 12);\n      utf8Str += String.fromCharCode(0x80 | charCode >> 6 & 0x3f);\n      utf8Str += String.fromCharCode(0x80 | charCode & 0x3f);\n    } else {\n      // surrogate pair\n      i++; // UTF-16 encodes 0x10000-0x10FFFF by\n      // subtracting 0x10000 and splitting the\n      // 20 bits of 0x0-0xFFFFF into two halves\n\n      charCode = 0x10000 + ((charCode & 0x3ff) << 10 | str.charCodeAt(i) & 0x3ff);\n      utf8Str += String.fromCharCode(0xf0 | charCode >> 18);\n      utf8Str += String.fromCharCode(0x80 | charCode >> 12 & 0x3f);\n      utf8Str += String.fromCharCode(0x80 | charCode >> 6 & 0x3f);\n      utf8Str += String.fromCharCode(0x80 | charCode & 0x3f);\n    }\n  }\n  return utf8Str;\n}\nfunction generatePath(modules) {\n  var margin = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var ops = [];\n  modules.forEach(function (row, y) {\n    var start = null;\n    row.forEach(function (cell, x) {\n      if (!cell && start !== null) {\n        // M0 0h7v1H0z injects the space with the move and drops the comma,\n        // saving a char per operation\n        ops.push(\"M\".concat(start + margin, \" \").concat(y + margin, \"h\").concat(x - start, \"v1H\").concat(start + margin, \"z\"));\n        start = null;\n        return;\n      } // end of row, clean up or skip\n\n      if (x === row.length - 1) {\n        if (!cell) {\n          // We would have closed the op above already so this can only mean\n          // 2+ light modules in a row.\n          return;\n        }\n        if (start === null) {\n          // Just a single dark module.\n          ops.push(\"M\".concat(x + margin, \",\").concat(y + margin, \" h1v1H\").concat(x + margin, \"z\"));\n        } else {\n          // Otherwise finish the current line.\n          ops.push(\"M\".concat(start + margin, \",\").concat(y + margin, \" h\").concat(x + 1 - start, \"v1H\").concat(start + margin, \"z\"));\n        }\n        return;\n      }\n      if (cell && start === null) {\n        start = x;\n      }\n    });\n  });\n  return ops.join('');\n} // @vue/component\n\nvar QrcodeVue = {\n  props: {\n    value: {\n      type: String,\n      required: true,\n      default: ''\n    },\n    className: {\n      type: String,\n      default: ''\n    },\n    size: {\n      type: [Number, String],\n      default: 100,\n      validator: function validator(s) {\n        return isNaN(Number(s)) !== true;\n      }\n    },\n    level: {\n      type: String,\n      default: 'L',\n      validator: function validator(l) {\n        return ['L', 'Q', 'M', 'H'].indexOf(l) > -1;\n      }\n    },\n    background: {\n      type: String,\n      default: '#fff'\n    },\n    foreground: {\n      type: String,\n      default: '#000'\n    },\n    renderAs: {\n      type: String,\n      required: false,\n      default: 'canvas',\n      validator: function validator(as) {\n        return ['canvas', 'svg'].indexOf(as) > -1;\n      }\n    }\n  },\n  data: function data() {\n    return {\n      numCells: 0,\n      fgPath: ''\n    };\n  },\n  updated: function updated() {\n    this.render();\n  },\n  mounted: function mounted() {\n    this.render();\n  },\n  methods: {\n    render: function render() {\n      var value = this.value,\n        size = this.size,\n        level = this.level,\n        background = this.background,\n        foreground = this.foreground,\n        renderAs = this.renderAs;\n      var _size = size >>> 0; // size to number\n      // We'll use type===-1 to force QRCode to automatically pick the best type\n\n      var qrCode = new QRCode_1(-1, ErrorCorrectLevel[level]);\n      qrCode.addData(toUTF8String(value));\n      qrCode.make();\n      var cells = qrCode.modules;\n      var tileW = _size / cells.length;\n      var tileH = _size / cells.length;\n      var scale = window.devicePixelRatio || 1;\n      if (renderAs === 'svg') {\n        this.numCells = cells.length; // Drawing strategy: instead of a rect per module, we're going to create a\n        // single path for the dark modules and layer that on top of a light rect,\n        // for a total of 2 DOM nodes. We pay a bit more in string concat but that's\n        // way faster than DOM ops.\n        // For level 1, 441 nodes -> 2\n        // For level 40, 31329 -> 2\n\n        this.fgPath = generatePath(cells);\n      } else {\n        var canvas = this.$refs['qrcode-vue'];\n        var ctx = canvas.getContext('2d');\n        canvas.height = canvas.width = _size * scale;\n        ctx.scale(scale, scale);\n        cells.forEach(function (row, rdx) {\n          row.forEach(function (cell, cdx) {\n            ctx.fillStyle = cell ? foreground : background;\n            var w = Math.ceil((cdx + 1) * tileW) - Math.floor(cdx * tileW);\n            var h = Math.ceil((rdx + 1) * tileH) - Math.floor(rdx * tileH);\n            ctx.fillRect(Math.round(cdx * tileW), Math.round(rdx * tileH), w, h);\n          });\n        });\n      }\n    }\n  },\n  render: function render(createElement) {\n    var className = this.className,\n      value = this.value,\n      level = this.level,\n      background = this.background,\n      foreground = this.foreground,\n      size = this.size,\n      renderAs = this.renderAs,\n      numCells = this.numCells,\n      fgPath = this.fgPath;\n    return createElement('div', {\n      class: this.class || className,\n      attrs: {\n        value: value,\n        level: level,\n        background: background,\n        foreground: foreground\n      }\n    }, [renderAs === 'svg' ? createElement('svg', {\n      attrs: {\n        height: size,\n        width: size,\n        shapeRendering: 'crispEdges',\n        viewBox: \"0 0 \".concat(numCells, \" \").concat(numCells)\n      },\n      style: {\n        width: size + 'px',\n        height: size + 'px'\n      }\n    }, [createElement('path', {\n      attrs: {\n        fill: background,\n        d: \"M0,0 h\".concat(numCells, \"v\").concat(numCells, \"H0z\")\n      }\n    }), createElement('path', {\n      attrs: {\n        fill: foreground,\n        d: fgPath\n      }\n    })]) : createElement('canvas', {\n      attrs: {\n        height: size,\n        width: size\n      },\n      style: {\n        width: size + 'px',\n        height: size + 'px'\n      },\n      ref: 'qrcode-vue'\n    }, [])]);\n  }\n};\nexport default QrcodeVue;","map":{"version":3,"names":["mode","MODE_NUMBER","MODE_ALPHA_NUM","MODE_8BIT_BYTE","MODE_KANJI","QR8bitByte","data","prototype","getLength","buffer","length","write","i","put","charCodeAt","_8BitByte","ErrorCorrectLevel","L","M","Q","H","QRRSBlock","totalCount","dataCount","RS_BLOCK_TABLE","getRSBlocks","typeNumber","errorCorrectLevel","rsBlock","getRsBlockTable","undefined","Error","list","Array","count","j","push","RSBlock","QRBitBuffer","get","index","bufIndex","Math","floor","num","putBit","getLengthInBits","bit","BitBuffer","QRMath","glog","n","LOG_TABLE","gexp","EXP_TABLE","math","QRPolynomial","shift","offset","multiply","e","mod","ratio","Polynomial","QRMaskPattern","PATTERN000","PATTERN001","PATTERN010","PATTERN011","PATTERN100","PATTERN101","PATTERN110","PATTERN111","QRUtil","PATTERN_POSITION_TABLE","G15","G18","G15_MASK","getBCHTypeInfo","d","getBCHDigit","getBCHTypeNumber","digit","getPatternPosition","getMask","maskPattern","getErrorCorrectPolynomial","errorCorrectLength","a","mode$1","type","getLostPoint","qrCode","moduleCount","getModuleCount","lostPoint","row","col","sameCount","dark","isDark","r","c","darkCount","abs","util","QRCode","modules","dataCache","dataList","proto","addData","newData","make","rsBlocks","totalDataCount","makeImpl","getBestMaskPattern","test","setupPositionProbePattern","setupPositionAdjustPattern","setupTimingPattern","setupTypeInfo","setupTypeNumber","createData","mapData","minLostPoint","pattern","createMovieClip","target_mc","instance_name","depth","qr_mc","createEmptyMovieClip","cs","y","x","beginFill","moveTo","lineTo","endFill","pos","bits","inc","bitIndex","byteIndex","mask","PAD0","PAD1","createBytes","maxDcCount","maxEcCount","dcdata","ecdata","dcCount","ecCount","max","rsPoly","rawPoly","modPoly","modIndex","totalCodeCount","QRCode_1","toUTF8String","str","utf8Str","charCode","String","fromCharCode","generatePath","margin","arguments","ops","forEach","start","cell","concat","join","QrcodeVue","props","value","required","default","className","size","Number","validator","s","isNaN","level","l","indexOf","background","foreground","renderAs","as","numCells","fgPath","updated","render","mounted","methods","_size","cells","tileW","tileH","scale","window","devicePixelRatio","canvas","$refs","ctx","getContext","height","width","rdx","cdx","fillStyle","w","ceil","h","fillRect","round","createElement","class","attrs","shapeRendering","viewBox","style","fill","ref"],"sources":["/Users/nuria/Developer/Modern/node_modules/qrcode.vue/dist/qrcode.vue.esm.js"],"sourcesContent":["/*!\n * qrcode.vue v1.7.0\n * A Vue component to generate QRCode.\n * Â© 2017-2019 @scopewu(https://github.com/scopewu)\n * MIT License.\n */\nvar mode = {\n  MODE_NUMBER: 1 << 0,\n  MODE_ALPHA_NUM: 1 << 1,\n  MODE_8BIT_BYTE: 1 << 2,\n  MODE_KANJI: 1 << 3\n};\n\nfunction QR8bitByte(data) {\n  this.mode = mode.MODE_8BIT_BYTE;\n  this.data = data;\n}\n\nQR8bitByte.prototype = {\n  getLength: function (buffer) {\n    return this.data.length;\n  },\n  write: function (buffer) {\n    for (var i = 0; i < this.data.length; i++) {\n      // not JIS ...\n      buffer.put(this.data.charCodeAt(i), 8);\n    }\n  }\n};\nvar _8BitByte = QR8bitByte;\n\nvar ErrorCorrectLevel = {\n  L: 1,\n  M: 0,\n  Q: 3,\n  H: 2\n};\n\nfunction QRRSBlock(totalCount, dataCount) {\n  this.totalCount = totalCount;\n  this.dataCount = dataCount;\n}\n\nQRRSBlock.RS_BLOCK_TABLE = [// L\n// M\n// Q\n// H\n// 1\n[1, 26, 19], [1, 26, 16], [1, 26, 13], [1, 26, 9], // 2\n[1, 44, 34], [1, 44, 28], [1, 44, 22], [1, 44, 16], // 3\n[1, 70, 55], [1, 70, 44], [2, 35, 17], [2, 35, 13], // 4\t\t\n[1, 100, 80], [2, 50, 32], [2, 50, 24], [4, 25, 9], // 5\n[1, 134, 108], [2, 67, 43], [2, 33, 15, 2, 34, 16], [2, 33, 11, 2, 34, 12], // 6\n[2, 86, 68], [4, 43, 27], [4, 43, 19], [4, 43, 15], // 7\t\t\n[2, 98, 78], [4, 49, 31], [2, 32, 14, 4, 33, 15], [4, 39, 13, 1, 40, 14], // 8\n[2, 121, 97], [2, 60, 38, 2, 61, 39], [4, 40, 18, 2, 41, 19], [4, 40, 14, 2, 41, 15], // 9\n[2, 146, 116], [3, 58, 36, 2, 59, 37], [4, 36, 16, 4, 37, 17], [4, 36, 12, 4, 37, 13], // 10\t\t\n[2, 86, 68, 2, 87, 69], [4, 69, 43, 1, 70, 44], [6, 43, 19, 2, 44, 20], [6, 43, 15, 2, 44, 16], // 11\n[4, 101, 81], [1, 80, 50, 4, 81, 51], [4, 50, 22, 4, 51, 23], [3, 36, 12, 8, 37, 13], // 12\n[2, 116, 92, 2, 117, 93], [6, 58, 36, 2, 59, 37], [4, 46, 20, 6, 47, 21], [7, 42, 14, 4, 43, 15], // 13\n[4, 133, 107], [8, 59, 37, 1, 60, 38], [8, 44, 20, 4, 45, 21], [12, 33, 11, 4, 34, 12], // 14\n[3, 145, 115, 1, 146, 116], [4, 64, 40, 5, 65, 41], [11, 36, 16, 5, 37, 17], [11, 36, 12, 5, 37, 13], // 15\n[5, 109, 87, 1, 110, 88], [5, 65, 41, 5, 66, 42], [5, 54, 24, 7, 55, 25], [11, 36, 12], // 16\n[5, 122, 98, 1, 123, 99], [7, 73, 45, 3, 74, 46], [15, 43, 19, 2, 44, 20], [3, 45, 15, 13, 46, 16], // 17\n[1, 135, 107, 5, 136, 108], [10, 74, 46, 1, 75, 47], [1, 50, 22, 15, 51, 23], [2, 42, 14, 17, 43, 15], // 18\n[5, 150, 120, 1, 151, 121], [9, 69, 43, 4, 70, 44], [17, 50, 22, 1, 51, 23], [2, 42, 14, 19, 43, 15], // 19\n[3, 141, 113, 4, 142, 114], [3, 70, 44, 11, 71, 45], [17, 47, 21, 4, 48, 22], [9, 39, 13, 16, 40, 14], // 20\n[3, 135, 107, 5, 136, 108], [3, 67, 41, 13, 68, 42], [15, 54, 24, 5, 55, 25], [15, 43, 15, 10, 44, 16], // 21\n[4, 144, 116, 4, 145, 117], [17, 68, 42], [17, 50, 22, 6, 51, 23], [19, 46, 16, 6, 47, 17], // 22\n[2, 139, 111, 7, 140, 112], [17, 74, 46], [7, 54, 24, 16, 55, 25], [34, 37, 13], // 23\n[4, 151, 121, 5, 152, 122], [4, 75, 47, 14, 76, 48], [11, 54, 24, 14, 55, 25], [16, 45, 15, 14, 46, 16], // 24\n[6, 147, 117, 4, 148, 118], [6, 73, 45, 14, 74, 46], [11, 54, 24, 16, 55, 25], [30, 46, 16, 2, 47, 17], // 25\n[8, 132, 106, 4, 133, 107], [8, 75, 47, 13, 76, 48], [7, 54, 24, 22, 55, 25], [22, 45, 15, 13, 46, 16], // 26\n[10, 142, 114, 2, 143, 115], [19, 74, 46, 4, 75, 47], [28, 50, 22, 6, 51, 23], [33, 46, 16, 4, 47, 17], // 27\n[8, 152, 122, 4, 153, 123], [22, 73, 45, 3, 74, 46], [8, 53, 23, 26, 54, 24], [12, 45, 15, 28, 46, 16], // 28\n[3, 147, 117, 10, 148, 118], [3, 73, 45, 23, 74, 46], [4, 54, 24, 31, 55, 25], [11, 45, 15, 31, 46, 16], // 29\n[7, 146, 116, 7, 147, 117], [21, 73, 45, 7, 74, 46], [1, 53, 23, 37, 54, 24], [19, 45, 15, 26, 46, 16], // 30\n[5, 145, 115, 10, 146, 116], [19, 75, 47, 10, 76, 48], [15, 54, 24, 25, 55, 25], [23, 45, 15, 25, 46, 16], // 31\n[13, 145, 115, 3, 146, 116], [2, 74, 46, 29, 75, 47], [42, 54, 24, 1, 55, 25], [23, 45, 15, 28, 46, 16], // 32\n[17, 145, 115], [10, 74, 46, 23, 75, 47], [10, 54, 24, 35, 55, 25], [19, 45, 15, 35, 46, 16], // 33\n[17, 145, 115, 1, 146, 116], [14, 74, 46, 21, 75, 47], [29, 54, 24, 19, 55, 25], [11, 45, 15, 46, 46, 16], // 34\n[13, 145, 115, 6, 146, 116], [14, 74, 46, 23, 75, 47], [44, 54, 24, 7, 55, 25], [59, 46, 16, 1, 47, 17], // 35\n[12, 151, 121, 7, 152, 122], [12, 75, 47, 26, 76, 48], [39, 54, 24, 14, 55, 25], [22, 45, 15, 41, 46, 16], // 36\n[6, 151, 121, 14, 152, 122], [6, 75, 47, 34, 76, 48], [46, 54, 24, 10, 55, 25], [2, 45, 15, 64, 46, 16], // 37\n[17, 152, 122, 4, 153, 123], [29, 74, 46, 14, 75, 47], [49, 54, 24, 10, 55, 25], [24, 45, 15, 46, 46, 16], // 38\n[4, 152, 122, 18, 153, 123], [13, 74, 46, 32, 75, 47], [48, 54, 24, 14, 55, 25], [42, 45, 15, 32, 46, 16], // 39\n[20, 147, 117, 4, 148, 118], [40, 75, 47, 7, 76, 48], [43, 54, 24, 22, 55, 25], [10, 45, 15, 67, 46, 16], // 40\n[19, 148, 118, 6, 149, 119], [18, 75, 47, 31, 76, 48], [34, 54, 24, 34, 55, 25], [20, 45, 15, 61, 46, 16]];\n\nQRRSBlock.getRSBlocks = function (typeNumber, errorCorrectLevel) {\n  var rsBlock = QRRSBlock.getRsBlockTable(typeNumber, errorCorrectLevel);\n\n  if (rsBlock == undefined) {\n    throw new Error(\"bad rs block @ typeNumber:\" + typeNumber + \"/errorCorrectLevel:\" + errorCorrectLevel);\n  }\n\n  var length = rsBlock.length / 3;\n  var list = new Array();\n\n  for (var i = 0; i < length; i++) {\n    var count = rsBlock[i * 3 + 0];\n    var totalCount = rsBlock[i * 3 + 1];\n    var dataCount = rsBlock[i * 3 + 2];\n\n    for (var j = 0; j < count; j++) {\n      list.push(new QRRSBlock(totalCount, dataCount));\n    }\n  }\n\n  return list;\n};\n\nQRRSBlock.getRsBlockTable = function (typeNumber, errorCorrectLevel) {\n  switch (errorCorrectLevel) {\n    case ErrorCorrectLevel.L:\n      return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 0];\n\n    case ErrorCorrectLevel.M:\n      return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1];\n\n    case ErrorCorrectLevel.Q:\n      return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2];\n\n    case ErrorCorrectLevel.H:\n      return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3];\n\n    default:\n      return undefined;\n  }\n};\n\nvar RSBlock = QRRSBlock;\n\nfunction QRBitBuffer() {\n  this.buffer = new Array();\n  this.length = 0;\n}\n\nQRBitBuffer.prototype = {\n  get: function (index) {\n    var bufIndex = Math.floor(index / 8);\n    return (this.buffer[bufIndex] >>> 7 - index % 8 & 1) == 1;\n  },\n  put: function (num, length) {\n    for (var i = 0; i < length; i++) {\n      this.putBit((num >>> length - i - 1 & 1) == 1);\n    }\n  },\n  getLengthInBits: function () {\n    return this.length;\n  },\n  putBit: function (bit) {\n    var bufIndex = Math.floor(this.length / 8);\n\n    if (this.buffer.length <= bufIndex) {\n      this.buffer.push(0);\n    }\n\n    if (bit) {\n      this.buffer[bufIndex] |= 0x80 >>> this.length % 8;\n    }\n\n    this.length++;\n  }\n};\nvar BitBuffer = QRBitBuffer;\n\nvar QRMath = {\n  glog: function (n) {\n    if (n < 1) {\n      throw new Error(\"glog(\" + n + \")\");\n    }\n\n    return QRMath.LOG_TABLE[n];\n  },\n  gexp: function (n) {\n    while (n < 0) {\n      n += 255;\n    }\n\n    while (n >= 256) {\n      n -= 255;\n    }\n\n    return QRMath.EXP_TABLE[n];\n  },\n  EXP_TABLE: new Array(256),\n  LOG_TABLE: new Array(256)\n};\n\nfor (var i = 0; i < 8; i++) {\n  QRMath.EXP_TABLE[i] = 1 << i;\n}\n\nfor (var i = 8; i < 256; i++) {\n  QRMath.EXP_TABLE[i] = QRMath.EXP_TABLE[i - 4] ^ QRMath.EXP_TABLE[i - 5] ^ QRMath.EXP_TABLE[i - 6] ^ QRMath.EXP_TABLE[i - 8];\n}\n\nfor (var i = 0; i < 255; i++) {\n  QRMath.LOG_TABLE[QRMath.EXP_TABLE[i]] = i;\n}\n\nvar math = QRMath;\n\nfunction QRPolynomial(num, shift) {\n  if (num.length == undefined) {\n    throw new Error(num.length + \"/\" + shift);\n  }\n\n  var offset = 0;\n\n  while (offset < num.length && num[offset] == 0) {\n    offset++;\n  }\n\n  this.num = new Array(num.length - offset + shift);\n\n  for (var i = 0; i < num.length - offset; i++) {\n    this.num[i] = num[i + offset];\n  }\n}\n\nQRPolynomial.prototype = {\n  get: function (index) {\n    return this.num[index];\n  },\n  getLength: function () {\n    return this.num.length;\n  },\n  multiply: function (e) {\n    var num = new Array(this.getLength() + e.getLength() - 1);\n\n    for (var i = 0; i < this.getLength(); i++) {\n      for (var j = 0; j < e.getLength(); j++) {\n        num[i + j] ^= math.gexp(math.glog(this.get(i)) + math.glog(e.get(j)));\n      }\n    }\n\n    return new QRPolynomial(num, 0);\n  },\n  mod: function (e) {\n    if (this.getLength() - e.getLength() < 0) {\n      return this;\n    }\n\n    var ratio = math.glog(this.get(0)) - math.glog(e.get(0));\n    var num = new Array(this.getLength());\n\n    for (var i = 0; i < this.getLength(); i++) {\n      num[i] = this.get(i);\n    }\n\n    for (var i = 0; i < e.getLength(); i++) {\n      num[i] ^= math.gexp(math.glog(e.get(i)) + ratio);\n    } // recursive call\n\n\n    return new QRPolynomial(num, 0).mod(e);\n  }\n};\nvar Polynomial = QRPolynomial;\n\nvar QRMaskPattern = {\n  PATTERN000: 0,\n  PATTERN001: 1,\n  PATTERN010: 2,\n  PATTERN011: 3,\n  PATTERN100: 4,\n  PATTERN101: 5,\n  PATTERN110: 6,\n  PATTERN111: 7\n};\nvar QRUtil = {\n  PATTERN_POSITION_TABLE: [[], [6, 18], [6, 22], [6, 26], [6, 30], [6, 34], [6, 22, 38], [6, 24, 42], [6, 26, 46], [6, 28, 50], [6, 30, 54], [6, 32, 58], [6, 34, 62], [6, 26, 46, 66], [6, 26, 48, 70], [6, 26, 50, 74], [6, 30, 54, 78], [6, 30, 56, 82], [6, 30, 58, 86], [6, 34, 62, 90], [6, 28, 50, 72, 94], [6, 26, 50, 74, 98], [6, 30, 54, 78, 102], [6, 28, 54, 80, 106], [6, 32, 58, 84, 110], [6, 30, 58, 86, 114], [6, 34, 62, 90, 118], [6, 26, 50, 74, 98, 122], [6, 30, 54, 78, 102, 126], [6, 26, 52, 78, 104, 130], [6, 30, 56, 82, 108, 134], [6, 34, 60, 86, 112, 138], [6, 30, 58, 86, 114, 142], [6, 34, 62, 90, 118, 146], [6, 30, 54, 78, 102, 126, 150], [6, 24, 50, 76, 102, 128, 154], [6, 28, 54, 80, 106, 132, 158], [6, 32, 58, 84, 110, 136, 162], [6, 26, 54, 82, 110, 138, 166], [6, 30, 58, 86, 114, 142, 170]],\n  G15: 1 << 10 | 1 << 8 | 1 << 5 | 1 << 4 | 1 << 2 | 1 << 1 | 1 << 0,\n  G18: 1 << 12 | 1 << 11 | 1 << 10 | 1 << 9 | 1 << 8 | 1 << 5 | 1 << 2 | 1 << 0,\n  G15_MASK: 1 << 14 | 1 << 12 | 1 << 10 | 1 << 4 | 1 << 1,\n  getBCHTypeInfo: function (data) {\n    var d = data << 10;\n\n    while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) >= 0) {\n      d ^= QRUtil.G15 << QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15);\n    }\n\n    return (data << 10 | d) ^ QRUtil.G15_MASK;\n  },\n  getBCHTypeNumber: function (data) {\n    var d = data << 12;\n\n    while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) >= 0) {\n      d ^= QRUtil.G18 << QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18);\n    }\n\n    return data << 12 | d;\n  },\n  getBCHDigit: function (data) {\n    var digit = 0;\n\n    while (data != 0) {\n      digit++;\n      data >>>= 1;\n    }\n\n    return digit;\n  },\n  getPatternPosition: function (typeNumber) {\n    return QRUtil.PATTERN_POSITION_TABLE[typeNumber - 1];\n  },\n  getMask: function (maskPattern, i, j) {\n    switch (maskPattern) {\n      case QRMaskPattern.PATTERN000:\n        return (i + j) % 2 == 0;\n\n      case QRMaskPattern.PATTERN001:\n        return i % 2 == 0;\n\n      case QRMaskPattern.PATTERN010:\n        return j % 3 == 0;\n\n      case QRMaskPattern.PATTERN011:\n        return (i + j) % 3 == 0;\n\n      case QRMaskPattern.PATTERN100:\n        return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 == 0;\n\n      case QRMaskPattern.PATTERN101:\n        return i * j % 2 + i * j % 3 == 0;\n\n      case QRMaskPattern.PATTERN110:\n        return (i * j % 2 + i * j % 3) % 2 == 0;\n\n      case QRMaskPattern.PATTERN111:\n        return (i * j % 3 + (i + j) % 2) % 2 == 0;\n\n      default:\n        throw new Error(\"bad maskPattern:\" + maskPattern);\n    }\n  },\n  getErrorCorrectPolynomial: function (errorCorrectLength) {\n    var a = new Polynomial([1], 0);\n\n    for (var i = 0; i < errorCorrectLength; i++) {\n      a = a.multiply(new Polynomial([1, math.gexp(i)], 0));\n    }\n\n    return a;\n  },\n  getLengthInBits: function (mode$1, type) {\n    if (1 <= type && type < 10) {\n      // 1 - 9\n      switch (mode$1) {\n        case mode.MODE_NUMBER:\n          return 10;\n\n        case mode.MODE_ALPHA_NUM:\n          return 9;\n\n        case mode.MODE_8BIT_BYTE:\n          return 8;\n\n        case mode.MODE_KANJI:\n          return 8;\n\n        default:\n          throw new Error(\"mode:\" + mode$1);\n      }\n    } else if (type < 27) {\n      // 10 - 26\n      switch (mode$1) {\n        case mode.MODE_NUMBER:\n          return 12;\n\n        case mode.MODE_ALPHA_NUM:\n          return 11;\n\n        case mode.MODE_8BIT_BYTE:\n          return 16;\n\n        case mode.MODE_KANJI:\n          return 10;\n\n        default:\n          throw new Error(\"mode:\" + mode$1);\n      }\n    } else if (type < 41) {\n      // 27 - 40\n      switch (mode$1) {\n        case mode.MODE_NUMBER:\n          return 14;\n\n        case mode.MODE_ALPHA_NUM:\n          return 13;\n\n        case mode.MODE_8BIT_BYTE:\n          return 16;\n\n        case mode.MODE_KANJI:\n          return 12;\n\n        default:\n          throw new Error(\"mode:\" + mode$1);\n      }\n    } else {\n      throw new Error(\"type:\" + type);\n    }\n  },\n  getLostPoint: function (qrCode) {\n    var moduleCount = qrCode.getModuleCount();\n    var lostPoint = 0; // LEVEL1\n\n    for (var row = 0; row < moduleCount; row++) {\n      for (var col = 0; col < moduleCount; col++) {\n        var sameCount = 0;\n        var dark = qrCode.isDark(row, col);\n\n        for (var r = -1; r <= 1; r++) {\n          if (row + r < 0 || moduleCount <= row + r) {\n            continue;\n          }\n\n          for (var c = -1; c <= 1; c++) {\n            if (col + c < 0 || moduleCount <= col + c) {\n              continue;\n            }\n\n            if (r == 0 && c == 0) {\n              continue;\n            }\n\n            if (dark == qrCode.isDark(row + r, col + c)) {\n              sameCount++;\n            }\n          }\n        }\n\n        if (sameCount > 5) {\n          lostPoint += 3 + sameCount - 5;\n        }\n      }\n    } // LEVEL2\n\n\n    for (var row = 0; row < moduleCount - 1; row++) {\n      for (var col = 0; col < moduleCount - 1; col++) {\n        var count = 0;\n        if (qrCode.isDark(row, col)) count++;\n        if (qrCode.isDark(row + 1, col)) count++;\n        if (qrCode.isDark(row, col + 1)) count++;\n        if (qrCode.isDark(row + 1, col + 1)) count++;\n\n        if (count == 0 || count == 4) {\n          lostPoint += 3;\n        }\n      }\n    } // LEVEL3\n\n\n    for (var row = 0; row < moduleCount; row++) {\n      for (var col = 0; col < moduleCount - 6; col++) {\n        if (qrCode.isDark(row, col) && !qrCode.isDark(row, col + 1) && qrCode.isDark(row, col + 2) && qrCode.isDark(row, col + 3) && qrCode.isDark(row, col + 4) && !qrCode.isDark(row, col + 5) && qrCode.isDark(row, col + 6)) {\n          lostPoint += 40;\n        }\n      }\n    }\n\n    for (var col = 0; col < moduleCount; col++) {\n      for (var row = 0; row < moduleCount - 6; row++) {\n        if (qrCode.isDark(row, col) && !qrCode.isDark(row + 1, col) && qrCode.isDark(row + 2, col) && qrCode.isDark(row + 3, col) && qrCode.isDark(row + 4, col) && !qrCode.isDark(row + 5, col) && qrCode.isDark(row + 6, col)) {\n          lostPoint += 40;\n        }\n      }\n    } // LEVEL4\n\n\n    var darkCount = 0;\n\n    for (var col = 0; col < moduleCount; col++) {\n      for (var row = 0; row < moduleCount; row++) {\n        if (qrCode.isDark(row, col)) {\n          darkCount++;\n        }\n      }\n    }\n\n    var ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;\n    lostPoint += ratio * 10;\n    return lostPoint;\n  }\n};\nvar util = QRUtil;\n\nfunction QRCode(typeNumber, errorCorrectLevel) {\n  this.typeNumber = typeNumber;\n  this.errorCorrectLevel = errorCorrectLevel;\n  this.modules = null;\n  this.moduleCount = 0;\n  this.dataCache = null;\n  this.dataList = [];\n} // for client side minification\n\n\nvar proto = QRCode.prototype;\n\nproto.addData = function (data) {\n  var newData = new _8BitByte(data);\n  this.dataList.push(newData);\n  this.dataCache = null;\n};\n\nproto.isDark = function (row, col) {\n  if (row < 0 || this.moduleCount <= row || col < 0 || this.moduleCount <= col) {\n    throw new Error(row + \",\" + col);\n  }\n\n  return this.modules[row][col];\n};\n\nproto.getModuleCount = function () {\n  return this.moduleCount;\n};\n\nproto.make = function () {\n  // Calculate automatically typeNumber if provided is < 1\n  if (this.typeNumber < 1) {\n    var typeNumber = 1;\n\n    for (typeNumber = 1; typeNumber < 40; typeNumber++) {\n      var rsBlocks = RSBlock.getRSBlocks(typeNumber, this.errorCorrectLevel);\n      var buffer = new BitBuffer();\n      var totalDataCount = 0;\n\n      for (var i = 0; i < rsBlocks.length; i++) {\n        totalDataCount += rsBlocks[i].dataCount;\n      }\n\n      for (var i = 0; i < this.dataList.length; i++) {\n        var data = this.dataList[i];\n        buffer.put(data.mode, 4);\n        buffer.put(data.getLength(), util.getLengthInBits(data.mode, typeNumber));\n        data.write(buffer);\n      }\n\n      if (buffer.getLengthInBits() <= totalDataCount * 8) break;\n    }\n\n    this.typeNumber = typeNumber;\n  }\n\n  this.makeImpl(false, this.getBestMaskPattern());\n};\n\nproto.makeImpl = function (test, maskPattern) {\n  this.moduleCount = this.typeNumber * 4 + 17;\n  this.modules = new Array(this.moduleCount);\n\n  for (var row = 0; row < this.moduleCount; row++) {\n    this.modules[row] = new Array(this.moduleCount);\n\n    for (var col = 0; col < this.moduleCount; col++) {\n      this.modules[row][col] = null; //(col + row) % 3;\n    }\n  }\n\n  this.setupPositionProbePattern(0, 0);\n  this.setupPositionProbePattern(this.moduleCount - 7, 0);\n  this.setupPositionProbePattern(0, this.moduleCount - 7);\n  this.setupPositionAdjustPattern();\n  this.setupTimingPattern();\n  this.setupTypeInfo(test, maskPattern);\n\n  if (this.typeNumber >= 7) {\n    this.setupTypeNumber(test);\n  }\n\n  if (this.dataCache == null) {\n    this.dataCache = QRCode.createData(this.typeNumber, this.errorCorrectLevel, this.dataList);\n  }\n\n  this.mapData(this.dataCache, maskPattern);\n};\n\nproto.setupPositionProbePattern = function (row, col) {\n  for (var r = -1; r <= 7; r++) {\n    if (row + r <= -1 || this.moduleCount <= row + r) continue;\n\n    for (var c = -1; c <= 7; c++) {\n      if (col + c <= -1 || this.moduleCount <= col + c) continue;\n\n      if (0 <= r && r <= 6 && (c == 0 || c == 6) || 0 <= c && c <= 6 && (r == 0 || r == 6) || 2 <= r && r <= 4 && 2 <= c && c <= 4) {\n        this.modules[row + r][col + c] = true;\n      } else {\n        this.modules[row + r][col + c] = false;\n      }\n    }\n  }\n};\n\nproto.getBestMaskPattern = function () {\n  var minLostPoint = 0;\n  var pattern = 0;\n\n  for (var i = 0; i < 8; i++) {\n    this.makeImpl(true, i);\n    var lostPoint = util.getLostPoint(this);\n\n    if (i == 0 || minLostPoint > lostPoint) {\n      minLostPoint = lostPoint;\n      pattern = i;\n    }\n  }\n\n  return pattern;\n};\n\nproto.createMovieClip = function (target_mc, instance_name, depth) {\n  var qr_mc = target_mc.createEmptyMovieClip(instance_name, depth);\n  var cs = 1;\n  this.make();\n\n  for (var row = 0; row < this.modules.length; row++) {\n    var y = row * cs;\n\n    for (var col = 0; col < this.modules[row].length; col++) {\n      var x = col * cs;\n      var dark = this.modules[row][col];\n\n      if (dark) {\n        qr_mc.beginFill(0, 100);\n        qr_mc.moveTo(x, y);\n        qr_mc.lineTo(x + cs, y);\n        qr_mc.lineTo(x + cs, y + cs);\n        qr_mc.lineTo(x, y + cs);\n        qr_mc.endFill();\n      }\n    }\n  }\n\n  return qr_mc;\n};\n\nproto.setupTimingPattern = function () {\n  for (var r = 8; r < this.moduleCount - 8; r++) {\n    if (this.modules[r][6] != null) {\n      continue;\n    }\n\n    this.modules[r][6] = r % 2 == 0;\n  }\n\n  for (var c = 8; c < this.moduleCount - 8; c++) {\n    if (this.modules[6][c] != null) {\n      continue;\n    }\n\n    this.modules[6][c] = c % 2 == 0;\n  }\n};\n\nproto.setupPositionAdjustPattern = function () {\n  var pos = util.getPatternPosition(this.typeNumber);\n\n  for (var i = 0; i < pos.length; i++) {\n    for (var j = 0; j < pos.length; j++) {\n      var row = pos[i];\n      var col = pos[j];\n\n      if (this.modules[row][col] != null) {\n        continue;\n      }\n\n      for (var r = -2; r <= 2; r++) {\n        for (var c = -2; c <= 2; c++) {\n          if (r == -2 || r == 2 || c == -2 || c == 2 || r == 0 && c == 0) {\n            this.modules[row + r][col + c] = true;\n          } else {\n            this.modules[row + r][col + c] = false;\n          }\n        }\n      }\n    }\n  }\n};\n\nproto.setupTypeNumber = function (test) {\n  var bits = util.getBCHTypeNumber(this.typeNumber);\n\n  for (var i = 0; i < 18; i++) {\n    var mod = !test && (bits >> i & 1) == 1;\n    this.modules[Math.floor(i / 3)][i % 3 + this.moduleCount - 8 - 3] = mod;\n  }\n\n  for (var i = 0; i < 18; i++) {\n    var mod = !test && (bits >> i & 1) == 1;\n    this.modules[i % 3 + this.moduleCount - 8 - 3][Math.floor(i / 3)] = mod;\n  }\n};\n\nproto.setupTypeInfo = function (test, maskPattern) {\n  var data = this.errorCorrectLevel << 3 | maskPattern;\n  var bits = util.getBCHTypeInfo(data); // vertical\t\t\n\n  for (var i = 0; i < 15; i++) {\n    var mod = !test && (bits >> i & 1) == 1;\n\n    if (i < 6) {\n      this.modules[i][8] = mod;\n    } else if (i < 8) {\n      this.modules[i + 1][8] = mod;\n    } else {\n      this.modules[this.moduleCount - 15 + i][8] = mod;\n    }\n  } // horizontal\n\n\n  for (var i = 0; i < 15; i++) {\n    var mod = !test && (bits >> i & 1) == 1;\n\n    if (i < 8) {\n      this.modules[8][this.moduleCount - i - 1] = mod;\n    } else if (i < 9) {\n      this.modules[8][15 - i - 1 + 1] = mod;\n    } else {\n      this.modules[8][15 - i - 1] = mod;\n    }\n  } // fixed module\n\n\n  this.modules[this.moduleCount - 8][8] = !test;\n};\n\nproto.mapData = function (data, maskPattern) {\n  var inc = -1;\n  var row = this.moduleCount - 1;\n  var bitIndex = 7;\n  var byteIndex = 0;\n\n  for (var col = this.moduleCount - 1; col > 0; col -= 2) {\n    if (col == 6) col--;\n\n    while (true) {\n      for (var c = 0; c < 2; c++) {\n        if (this.modules[row][col - c] == null) {\n          var dark = false;\n\n          if (byteIndex < data.length) {\n            dark = (data[byteIndex] >>> bitIndex & 1) == 1;\n          }\n\n          var mask = util.getMask(maskPattern, row, col - c);\n\n          if (mask) {\n            dark = !dark;\n          }\n\n          this.modules[row][col - c] = dark;\n          bitIndex--;\n\n          if (bitIndex == -1) {\n            byteIndex++;\n            bitIndex = 7;\n          }\n        }\n      }\n\n      row += inc;\n\n      if (row < 0 || this.moduleCount <= row) {\n        row -= inc;\n        inc = -inc;\n        break;\n      }\n    }\n  }\n};\n\nQRCode.PAD0 = 0xEC;\nQRCode.PAD1 = 0x11;\n\nQRCode.createData = function (typeNumber, errorCorrectLevel, dataList) {\n  var rsBlocks = RSBlock.getRSBlocks(typeNumber, errorCorrectLevel);\n  var buffer = new BitBuffer();\n\n  for (var i = 0; i < dataList.length; i++) {\n    var data = dataList[i];\n    buffer.put(data.mode, 4);\n    buffer.put(data.getLength(), util.getLengthInBits(data.mode, typeNumber));\n    data.write(buffer);\n  } // calc num max data.\n\n\n  var totalDataCount = 0;\n\n  for (var i = 0; i < rsBlocks.length; i++) {\n    totalDataCount += rsBlocks[i].dataCount;\n  }\n\n  if (buffer.getLengthInBits() > totalDataCount * 8) {\n    throw new Error(\"code length overflow. (\" + buffer.getLengthInBits() + \">\" + totalDataCount * 8 + \")\");\n  } // end code\n\n\n  if (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {\n    buffer.put(0, 4);\n  } // padding\n\n\n  while (buffer.getLengthInBits() % 8 != 0) {\n    buffer.putBit(false);\n  } // padding\n\n\n  while (true) {\n    if (buffer.getLengthInBits() >= totalDataCount * 8) {\n      break;\n    }\n\n    buffer.put(QRCode.PAD0, 8);\n\n    if (buffer.getLengthInBits() >= totalDataCount * 8) {\n      break;\n    }\n\n    buffer.put(QRCode.PAD1, 8);\n  }\n\n  return QRCode.createBytes(buffer, rsBlocks);\n};\n\nQRCode.createBytes = function (buffer, rsBlocks) {\n  var offset = 0;\n  var maxDcCount = 0;\n  var maxEcCount = 0;\n  var dcdata = new Array(rsBlocks.length);\n  var ecdata = new Array(rsBlocks.length);\n\n  for (var r = 0; r < rsBlocks.length; r++) {\n    var dcCount = rsBlocks[r].dataCount;\n    var ecCount = rsBlocks[r].totalCount - dcCount;\n    maxDcCount = Math.max(maxDcCount, dcCount);\n    maxEcCount = Math.max(maxEcCount, ecCount);\n    dcdata[r] = new Array(dcCount);\n\n    for (var i = 0; i < dcdata[r].length; i++) {\n      dcdata[r][i] = 0xff & buffer.buffer[i + offset];\n    }\n\n    offset += dcCount;\n    var rsPoly = util.getErrorCorrectPolynomial(ecCount);\n    var rawPoly = new Polynomial(dcdata[r], rsPoly.getLength() - 1);\n    var modPoly = rawPoly.mod(rsPoly);\n    ecdata[r] = new Array(rsPoly.getLength() - 1);\n\n    for (var i = 0; i < ecdata[r].length; i++) {\n      var modIndex = i + modPoly.getLength() - ecdata[r].length;\n      ecdata[r][i] = modIndex >= 0 ? modPoly.get(modIndex) : 0;\n    }\n  }\n\n  var totalCodeCount = 0;\n\n  for (var i = 0; i < rsBlocks.length; i++) {\n    totalCodeCount += rsBlocks[i].totalCount;\n  }\n\n  var data = new Array(totalCodeCount);\n  var index = 0;\n\n  for (var i = 0; i < maxDcCount; i++) {\n    for (var r = 0; r < rsBlocks.length; r++) {\n      if (i < dcdata[r].length) {\n        data[index++] = dcdata[r][i];\n      }\n    }\n  }\n\n  for (var i = 0; i < maxEcCount; i++) {\n    for (var r = 0; r < rsBlocks.length; r++) {\n      if (i < ecdata[r].length) {\n        data[index++] = ecdata[r][i];\n      }\n    }\n  }\n\n  return data;\n};\n\nvar QRCode_1 = QRCode;\n\n/**\n * Encode UTF16 to UTF8.\n * See: http://jonisalonen.com/2012/from-utf-16-to-utf-8-in-javascript/\n * @param str {string}\n * @returns {string}\n */\n\nfunction toUTF8String(str) {\n  var utf8Str = '';\n\n  for (var i = 0; i < str.length; i++) {\n    var charCode = str.charCodeAt(i);\n\n    if (charCode < 0x0080) {\n      utf8Str += String.fromCharCode(charCode);\n    } else if (charCode < 0x0800) {\n      utf8Str += String.fromCharCode(0xc0 | charCode >> 6);\n      utf8Str += String.fromCharCode(0x80 | charCode & 0x3f);\n    } else if (charCode < 0xd800 || charCode >= 0xe000) {\n      utf8Str += String.fromCharCode(0xe0 | charCode >> 12);\n      utf8Str += String.fromCharCode(0x80 | charCode >> 6 & 0x3f);\n      utf8Str += String.fromCharCode(0x80 | charCode & 0x3f);\n    } else {\n      // surrogate pair\n      i++; // UTF-16 encodes 0x10000-0x10FFFF by\n      // subtracting 0x10000 and splitting the\n      // 20 bits of 0x0-0xFFFFF into two halves\n\n      charCode = 0x10000 + ((charCode & 0x3ff) << 10 | str.charCodeAt(i) & 0x3ff);\n      utf8Str += String.fromCharCode(0xf0 | charCode >> 18);\n      utf8Str += String.fromCharCode(0x80 | charCode >> 12 & 0x3f);\n      utf8Str += String.fromCharCode(0x80 | charCode >> 6 & 0x3f);\n      utf8Str += String.fromCharCode(0x80 | charCode & 0x3f);\n    }\n  }\n\n  return utf8Str;\n}\n\nfunction generatePath(modules) {\n  var margin = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var ops = [];\n  modules.forEach(function (row, y) {\n    var start = null;\n    row.forEach(function (cell, x) {\n      if (!cell && start !== null) {\n        // M0 0h7v1H0z injects the space with the move and drops the comma,\n        // saving a char per operation\n        ops.push(\"M\".concat(start + margin, \" \").concat(y + margin, \"h\").concat(x - start, \"v1H\").concat(start + margin, \"z\"));\n        start = null;\n        return;\n      } // end of row, clean up or skip\n\n\n      if (x === row.length - 1) {\n        if (!cell) {\n          // We would have closed the op above already so this can only mean\n          // 2+ light modules in a row.\n          return;\n        }\n\n        if (start === null) {\n          // Just a single dark module.\n          ops.push(\"M\".concat(x + margin, \",\").concat(y + margin, \" h1v1H\").concat(x + margin, \"z\"));\n        } else {\n          // Otherwise finish the current line.\n          ops.push(\"M\".concat(start + margin, \",\").concat(y + margin, \" h\").concat(x + 1 - start, \"v1H\").concat(start + margin, \"z\"));\n        }\n\n        return;\n      }\n\n      if (cell && start === null) {\n        start = x;\n      }\n    });\n  });\n  return ops.join('');\n} // @vue/component\n\n\nvar QrcodeVue = {\n  props: {\n    value: {\n      type: String,\n      required: true,\n      default: ''\n    },\n    className: {\n      type: String,\n      default: ''\n    },\n    size: {\n      type: [Number, String],\n      default: 100,\n      validator: function validator(s) {\n        return isNaN(Number(s)) !== true;\n      }\n    },\n    level: {\n      type: String,\n      default: 'L',\n      validator: function validator(l) {\n        return ['L', 'Q', 'M', 'H'].indexOf(l) > -1;\n      }\n    },\n    background: {\n      type: String,\n      default: '#fff'\n    },\n    foreground: {\n      type: String,\n      default: '#000'\n    },\n    renderAs: {\n      type: String,\n      required: false,\n      default: 'canvas',\n      validator: function validator(as) {\n        return ['canvas', 'svg'].indexOf(as) > -1;\n      }\n    }\n  },\n  data: function data() {\n    return {\n      numCells: 0,\n      fgPath: ''\n    };\n  },\n  updated: function updated() {\n    this.render();\n  },\n  mounted: function mounted() {\n    this.render();\n  },\n  methods: {\n    render: function render() {\n      var value = this.value,\n          size = this.size,\n          level = this.level,\n          background = this.background,\n          foreground = this.foreground,\n          renderAs = this.renderAs;\n\n      var _size = size >>> 0; // size to number\n      // We'll use type===-1 to force QRCode to automatically pick the best type\n\n\n      var qrCode = new QRCode_1(-1, ErrorCorrectLevel[level]);\n      qrCode.addData(toUTF8String(value));\n      qrCode.make();\n      var cells = qrCode.modules;\n      var tileW = _size / cells.length;\n      var tileH = _size / cells.length;\n      var scale = window.devicePixelRatio || 1;\n\n      if (renderAs === 'svg') {\n        this.numCells = cells.length; // Drawing strategy: instead of a rect per module, we're going to create a\n        // single path for the dark modules and layer that on top of a light rect,\n        // for a total of 2 DOM nodes. We pay a bit more in string concat but that's\n        // way faster than DOM ops.\n        // For level 1, 441 nodes -> 2\n        // For level 40, 31329 -> 2\n\n        this.fgPath = generatePath(cells);\n      } else {\n        var canvas = this.$refs['qrcode-vue'];\n        var ctx = canvas.getContext('2d');\n        canvas.height = canvas.width = _size * scale;\n        ctx.scale(scale, scale);\n        cells.forEach(function (row, rdx) {\n          row.forEach(function (cell, cdx) {\n            ctx.fillStyle = cell ? foreground : background;\n            var w = Math.ceil((cdx + 1) * tileW) - Math.floor(cdx * tileW);\n            var h = Math.ceil((rdx + 1) * tileH) - Math.floor(rdx * tileH);\n            ctx.fillRect(Math.round(cdx * tileW), Math.round(rdx * tileH), w, h);\n          });\n        });\n      }\n    }\n  },\n  render: function render(createElement) {\n    var className = this.className,\n        value = this.value,\n        level = this.level,\n        background = this.background,\n        foreground = this.foreground,\n        size = this.size,\n        renderAs = this.renderAs,\n        numCells = this.numCells,\n        fgPath = this.fgPath;\n    return createElement('div', {\n      class: this.class || className,\n      attrs: {\n        value: value,\n        level: level,\n        background: background,\n        foreground: foreground\n      }\n    }, [renderAs === 'svg' ? createElement('svg', {\n      attrs: {\n        height: size,\n        width: size,\n        shapeRendering: 'crispEdges',\n        viewBox: \"0 0 \".concat(numCells, \" \").concat(numCells)\n      },\n      style: {\n        width: size + 'px',\n        height: size + 'px'\n      }\n    }, [createElement('path', {\n      attrs: {\n        fill: background,\n        d: \"M0,0 h\".concat(numCells, \"v\").concat(numCells, \"H0z\")\n      }\n    }), createElement('path', {\n      attrs: {\n        fill: foreground,\n        d: fgPath\n      }\n    })]) : createElement('canvas', {\n      attrs: {\n        height: size,\n        width: size\n      },\n      style: {\n        width: size + 'px',\n        height: size + 'px'\n      },\n      ref: 'qrcode-vue'\n    }, [])]);\n  }\n};\n\nexport default QrcodeVue;\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,IAAI,GAAG;EACTC,WAAW,EAAE,CAAC,IAAI,CAAC;EACnBC,cAAc,EAAE,CAAC,IAAI,CAAC;EACtBC,cAAc,EAAE,CAAC,IAAI,CAAC;EACtBC,UAAU,EAAE,CAAC,IAAI;AACnB,CAAC;AAED,SAASC,UAAU,CAACC,IAAI,EAAE;EACxB,IAAI,CAACN,IAAI,GAAGA,IAAI,CAACG,cAAc;EAC/B,IAAI,CAACG,IAAI,GAAGA,IAAI;AAClB;AAEAD,UAAU,CAACE,SAAS,GAAG;EACrBC,SAAS,EAAE,UAAUC,MAAM,EAAE;IAC3B,OAAO,IAAI,CAACH,IAAI,CAACI,MAAM;EACzB,CAAC;EACDC,KAAK,EAAE,UAAUF,MAAM,EAAE;IACvB,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACN,IAAI,CAACI,MAAM,EAAEE,CAAC,EAAE,EAAE;MACzC;MACAH,MAAM,CAACI,GAAG,CAAC,IAAI,CAACP,IAAI,CAACQ,UAAU,CAACF,CAAC,CAAC,EAAE,CAAC,CAAC;IACxC;EACF;AACF,CAAC;AACD,IAAIG,SAAS,GAAGV,UAAU;AAE1B,IAAIW,iBAAiB,GAAG;EACtBC,CAAC,EAAE,CAAC;EACJC,CAAC,EAAE,CAAC;EACJC,CAAC,EAAE,CAAC;EACJC,CAAC,EAAE;AACL,CAAC;AAED,SAASC,SAAS,CAACC,UAAU,EAAEC,SAAS,EAAE;EACxC,IAAI,CAACD,UAAU,GAAGA,UAAU;EAC5B,IAAI,CAACC,SAAS,GAAGA,SAAS;AAC5B;AAEAF,SAAS,CAACG,cAAc,GAAG;AAAC;AAC5B;AACA;AACA;AACA;AACA,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAAE;AACnD,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AAAE;AACpD,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AAAE;AACpD,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAAE;AACpD,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AAAE;AAC5E,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AAAE;AACpD,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AAAE;AAC1E,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AAAE;AACtF,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AAAE;AACvF,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AAAE;AAChG,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AAAE;AACtF,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AAAE;AAClG,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AAAE;AACxF,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AAAE;AACtG,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AAAE;AACxF,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AAAE;AACpG,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AAAE;AACvG,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AAAE;AACtG,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AAAE;AACvG,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AAAE;AACxG,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AAAE;AAC5F,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AAAE;AACjF,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AAAE;AACzG,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AAAE;AACxG,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AAAE;AACxG,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AAAE;AACxG,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AAAE;AACxG,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AAAE;AACzG,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AAAE;AACxG,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AAAE;AAC3G,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AAAE;AACzG,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AAAE;AAC9F,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AAAE;AAC3G,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AAAE;AACzG,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AAAE;AAC3G,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AAAE;AACzG,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AAAE;AAC3G,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,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"},"metadata":{},"sourceType":"module"}