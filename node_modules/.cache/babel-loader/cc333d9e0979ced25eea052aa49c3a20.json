{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"CardsView\",\n  data() {\n    return {\n      selectedDay: null,\n      hover: false\n    };\n  },\n  computed: {\n    cards() {\n      console.log(this.$store.getters.cards);\n      if (this.selectedDay != null) {\n        return this.$store.getters.cards.filter(n => n.map == this.selectedDay);\n      } else {\n        return this.$store.getters.cards;\n      }\n    },\n    days() {\n      console.log(this.$store.getters.days);\n      return this.$store.getters.days;\n    }\n  },\n  methods: {\n    getDay(id) {\n      this.selectedDay = id;\n    },\n    goToCard(d) {\n      this.$router.push({\n        path: '/card/' + d._id\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";AAoCA;EACAA;EAEAC;IACA;MACAC;MACAC;IACA;EACA;EAEAC;IACAC;MACAC;MACA;QACA;MACA;QACA;MACA;IACA;IACAC;MACAD;MACA;IACA;EACA;EACAE;IACAC;MACA;IACA;IAAAC;MACA;QAAAC;MAAA;IACA;EACA;AACA","names":["name","data","selectedDay","hover","computed","cards","console","days","methods","getDay","goToCard","path"],"sourceRoot":"src/components","sources":["CardsWorld.vue"],"sourcesContent":["<template>\n    <div>\n        <div class=\"filter\">\n            <p>cards</p>\n            <div>\n                <button>memories</button>\n                <button>experience</button>\n                <button>idea</button>\n                <button>online</button>\n                <button>anecdote</button>\n            </div> \n        </div>\n        <div class=\"days\">\n            <div class=\"flex\">\n                <div>\n                    <p>Days</p>\n                    <div class=\"slide\">\n                        <div v-for=\"d in days\" :key=\"d._id\" class=\"dia\"> \n                            <button @click=\"getDay(d._id)\" :class=\"{'active':selectedDay==d._id}\">{{d.point}}</button>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"cards\">\n                    <div v-for=\"d in cards\" :key=\"d._id\" class=\"relative\" @click=\"goToCard(d)\" >\n                        <div class=\"absolute\">\n                            <button v-if=\"hover\">guardar</button>\n                        </div>\n                        <button><img :src=\"'..//..//public/cards/'+d.frontcover\" alt=\"\" @mouseover = \"hover = true\" @mouseeleave = \"hover = fals\"></button>\n                    </div>   \n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n  name: \"CardsView\",\n  \n  data(){\n    return{\n        selectedDay:null, \n        hover: false,\n    }\n  },\n\n  computed:{\n    cards(){\n        console.log(this.$store.getters.cards)\n        if (this.selectedDay!=null){\n        return this.$store.getters.cards.filter(n=> n.map==this.selectedDay)\n        }else{\n            return this.$store.getters.cards\n        }\n    }, \n    days(){\n        console.log(this.$store.getters.days)\n        return this.$store.getters.days\n    },\n  },\n  methods:{\n    getDay(id){\n        this.selectedDay = id\n    }, goToCard(d){\n        this.$router.push({path:'/card/'+d._id})\n    }\n  }\n};\n</script>\n\n<style scoped lang=\"scss\">\n\np{\n    color: black;\n    margin: 0;\n}\n\n.flex button{\n    color: grey;\n    font-size: 15px;\n}\n\n.flex .dia button.active{\n    color: black;\n}\n\n.flex button:hover{\n    color: black;\n}\n\n.days{\n    background-color: white;\n    padding: 0 40px;\n}\n\n.flex{\n    display: flex;\n}\n\nbutton{\n    border-style: none;\n    background-color: transparent;\n}\n\n.cards{\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n}\n\nimg{\n    width: 207px;\n    height: 257px;\n    margin: 30px;\n}\n\nimg:hover{\n    box-shadow: 2px 2px 25px grey;\n}\n\n.filter{\n    display: flex;\n    justify-content: space-between;\n}\n\n.filter button:hover{\n    text-decoration: underline;\n}\n\n.slide{\n    border-radius: 2em;\n    border: 1px solid black;\n}\n\n.dia button{\n    font-size: 16px;\n\n}\n\n.relative{\n    position: relative;\n}\n\n.absolute{\n    position: absolute;\n    right: 0; width: 100%; left: 35%;\n    top: 85%; \n}\n\n</style>"]},"metadata":{},"sourceType":"module"}